{"created": 1649676961.4612594, "duration": 0.29900383949279785, "exitcode": 2, "root": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-docker", "environment": {"Python": "3.8.13", "Platform": "Windows-10-10.0.19043-SP0", "Packages": {"pytest": "7.1.1", "py": "1.10.0", "pluggy": "0.13.1"}, "Plugins": {"json-report": "1.5.0", "metadata": "2.0.1", "submit": "1.3.3"}}, "summary": {"total": 0, "collected": 1}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/__init__.py", "type": "Package"}]}, {"nodeid": "tests/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "tests/Hash.py", "outcome": "passed", "result": []}, {"nodeid": "tests/Part1.py", "outcome": "failed", "result": [], "longrepr": "..\\..\\..\\anaconda3\\envs\\docker\\lib\\site-packages\\_pytest\\python.py:608: in _importtestmodule\n    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)\n..\\..\\..\\anaconda3\\envs\\docker\\lib\\site-packages\\_pytest\\pathlib.py:533: in import_path\n    importlib.import_module(module_name)\n..\\..\\..\\anaconda3\\envs\\docker\\lib\\importlib\\__init__.py:127: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1014: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:991: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:975: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:671: in _load_unlocked\n    ???\n..\\..\\..\\anaconda3\\envs\\docker\\lib\\site-packages\\_pytest\\assertion\\rewrite.py:168: in exec_module\n    exec(co, module.__dict__)\ntests\\Part1.py:2: in <module>\n    from src import Part1\n<frozen importlib._bootstrap>:991: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:975: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:671: in _load_unlocked\n    ???\n..\\..\\..\\anaconda3\\envs\\docker\\lib\\site-packages\\_pytest\\assertion\\rewrite.py:159: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n..\\..\\..\\anaconda3\\envs\\docker\\lib\\site-packages\\_pytest\\assertion\\rewrite.py:359: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n..\\..\\..\\anaconda3\\envs\\docker\\lib\\ast.py:47: in parse\n    return compile(source, filename, mode, flags,\nE     File \"C:\\Users\\Coke\\playground\\Section3\\ds-sa-docker\\src\\Part1.py\", line 4\nE       \ub3c4\ucee4 \uc2e4\ud589\uc774 \uc548\ub428\nE          ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/Part2.py", "outcome": "passed", "result": [{"nodeid": "tests/Part2.py::test_part2", "type": "Function", "lineno": 5}]}, {"nodeid": "tests/__init__.py", "outcome": "passed", "result": [{"nodeid": "tests/__init__.py", "type": "Module"}, {"nodeid": "tests/Hash.py", "type": "Module"}, {"nodeid": "tests/Part1.py", "type": "Module"}, {"nodeid": "tests/Part2.py", "type": "Module"}]}], "tests": []}