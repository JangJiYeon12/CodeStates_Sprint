{"created": 1649931624.2901647, "duration": 0.8890013694763184, "exitcode": 1, "root": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend", "environment": {"Python": "3.8.13", "Platform": "Windows-10-10.0.19043-SP0", "Packages": {"pytest": "6.2.2", "py": "1.10.0", "pluggy": "0.13.1"}, "Plugins": {"json-report": "1.5.0", "metadata": "2.0.1", "submit": "1.3.3"}}, "summary": {"failed": 74, "total": 74, "collected": 74}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/conftest.py", "type": "Module"}, {"nodeid": "tests/Part_1/__init__.py", "type": "Package"}, {"nodeid": "tests/Part_2/__init__.py", "type": "Package"}]}, {"nodeid": "tests/conftest.py", "outcome": "passed", "result": []}, {"nodeid": "tests/Part_1/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "tests/Part_1/Part_1.py::TestCase", "outcome": "passed", "result": []}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans", "outcome": "passed", "result": [{"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_blank_strings", "type": "TestCaseFunction", "lineno": 88}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_empty_collections", "type": "TestCaseFunction", "lineno": 78}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_false", "type": "TestCaseFunction", "lineno": 66}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_none", "type": "TestCaseFunction", "lineno": 69}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_others", "type": "TestCaseFunction", "lineno": 91}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_true", "type": "TestCaseFunction", "lineno": 60}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_zero", "type": "TestCaseFunction", "lineno": 75}]}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings", "outcome": "passed", "result": [{"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_backslashes_1", "type": "TestCaseFunction", "lineno": 165}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_backslashes_2", "type": "TestCaseFunction", "lineno": 173}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_double_quoted_strings", "type": "TestCaseFunction", "lineno": 122}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_escape_characters", "type": "TestCaseFunction", "lineno": 230}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_plus_signs_1", "type": "TestCaseFunction", "lineno": 217}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_plus_signs_2", "type": "TestCaseFunction", "lineno": 223}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_raw_strings", "type": "TestCaseFunction", "lineno": 148}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_single_and_double_quotes_1", "type": "TestCaseFunction", "lineno": 157}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_single_and_double_quotes_2", "type": "TestCaseFunction", "lineno": 161}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_single_quoted_strings", "type": "TestCaseFunction", "lineno": 130}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_string_concatenation_1", "type": "TestCaseFunction", "lineno": 204}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_string_concatenation_2", "type": "TestCaseFunction", "lineno": 208}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_triple_quote_strings", "type": "TestCaseFunction", "lineno": 137}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_triple_quoted_strings_1", "type": "TestCaseFunction", "lineno": 182}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_triple_quoted_strings_2", "type": "TestCaseFunction", "lineno": 194}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_triple_single_quotes", "type": "TestCaseFunction", "lineno": 144}]}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists", "outcome": "passed", "result": [{"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_insert", "type": "TestCaseFunction", "lineno": 353}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_list_and_ranges_1", "type": "TestCaseFunction", "lineno": 325}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_list_and_ranges_2", "type": "TestCaseFunction", "lineno": 339}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_list_creation", "type": "TestCaseFunction", "lineno": 256}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_list_elements", "type": "TestCaseFunction", "lineno": 286}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_list_literals", "type": "TestCaseFunction", "lineno": 267}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_pop", "type": "TestCaseFunction", "lineno": 366}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_slicing_lists_1", "type": "TestCaseFunction", "lineno": 302}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_slicing_lists_2", "type": "TestCaseFunction", "lineno": 319}]}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries", "outcome": "passed", "result": [{"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_accessing_dictionaries", "type": "TestCaseFunction", "lineno": 417}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_changing_dictionaries", "type": "TestCaseFunction", "lineno": 427}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_dictionary_creation", "type": "TestCaseFunction", "lineno": 398}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_dictionary_literals", "type": "TestCaseFunction", "lineno": 410}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_dictionary_order", "type": "TestCaseFunction", "lineno": 440}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_keys_and_values", "type": "TestCaseFunction", "lineno": 453}]}, {"nodeid": "tests/Part_1/Part_1.py", "outcome": "passed", "result": [{"nodeid": "tests/Part_1/Part_1.py::TestCase", "type": "UnitTestCase"}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans", "type": "UnitTestCase"}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings", "type": "UnitTestCase"}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists", "type": "UnitTestCase"}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries", "type": "UnitTestCase"}]}, {"nodeid": "tests/Part_1/__init__.py", "outcome": "passed", "result": [{"nodeid": "tests/Part_1/__init__.py", "type": "Module"}, {"nodeid": "tests/Part_1/Part_1.py", "type": "Module"}]}, {"nodeid": "tests/Part_2/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "tests/Part_2/Part_2.py::TestCase", "outcome": "passed", "result": []}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses", "outcome": "passed", "result": [{"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_class_docstrings", "type": "TestCaseFunction", "lineno": 43}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_class_property", "type": "TestCaseFunction", "lineno": 121}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_decorators", "type": "TestCaseFunction", "lineno": 159}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_getattr_and_dict", "type": "TestCaseFunction", "lineno": 86}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_init_and_instance", "type": "TestCaseFunction", "lineno": 194}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_init_args", "type": "TestCaseFunction", "lineno": 209}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_init_constructor", "type": "TestCaseFunction", "lineno": 64}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_instance_creation", "type": "TestCaseFunction", "lineno": 31}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_instance_variables", "type": "TestCaseFunction", "lineno": 226}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_objects_str_and_repr", "type": "TestCaseFunction", "lineno": 304}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_private_attributes", "type": "TestCaseFunction", "lineno": 76}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_repr_method", "type": "TestCaseFunction", "lineno": 290}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_self_reference", "type": "TestCaseFunction", "lineno": 262}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_str_method", "type": "TestCaseFunction", "lineno": 274}]}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes", "outcome": "passed", "result": [{"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_class_and_objects", "type": "TestCaseFunction", "lineno": 345}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_class_and_types", "type": "TestCaseFunction", "lineno": 338}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_class_methods", "type": "TestCaseFunction", "lineno": 365}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_individual_object_attributes", "type": "TestCaseFunction", "lineno": 368}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_individual_object_functions_1", "type": "TestCaseFunction", "lineno": 374}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_individual_object_functions_2", "type": "TestCaseFunction", "lineno": 380}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_object_methods", "type": "TestCaseFunction", "lineno": 353}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_objects", "type": "TestCaseFunction", "lineno": 329}]}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance", "outcome": "passed", "result": [{"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_behavior_inheritance", "type": "TestCaseFunction", "lineno": 440}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_explicit_init_call", "type": "TestCaseFunction", "lineno": 524}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_init_is_not_automatic", "type": "TestCaseFunction", "lineno": 506}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_python3_object_class", "type": "TestCaseFunction", "lineno": 437}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_subclass_ancestors", "type": "TestCaseFunction", "lineno": 425}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_subclass_behavior_modification", "type": "TestCaseFunction", "lineno": 457}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_subclass_new_behaviors", "type": "TestCaseFunction", "lineno": 444}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_super", "type": "TestCaseFunction", "lineno": 477}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_super_works_across_methods", "type": "TestCaseFunction", "lineno": 492}]}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions", "outcome": "passed", "result": [{"nodeid": "tests/Part_2/Part_2.py::PythonExceptions::test_about_else_clause", "type": "TestCaseFunction", "lineno": 613}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions::test_about_exception_inheritance", "type": "TestCaseFunction", "lineno": 551}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions::test_about_finally_clause", "type": "TestCaseFunction", "lineno": 632}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions::test_about_raising_specific_error", "type": "TestCaseFunction", "lineno": 594}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions::test_about_try_clause", "type": "TestCaseFunction", "lineno": 565}]}, {"nodeid": "tests/Part_2/Part_2.py", "outcome": "passed", "result": [{"nodeid": "tests/Part_2/Part_2.py::TestCase", "type": "UnitTestCase"}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses", "type": "UnitTestCase"}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes", "type": "UnitTestCase"}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance", "type": "UnitTestCase"}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions", "type": "UnitTestCase"}]}, {"nodeid": "tests/Part_2/__init__.py", "outcome": "passed", "result": [{"nodeid": "tests/Part_2/__init__.py", "type": "Module"}, {"nodeid": "tests/Part_2/Part_2.py", "type": "Module"}]}], "tests": [{"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_blank_strings", "lineno": 88, "outcome": "failed", "keywords": ["PythonBooleans", "test_about_blank_strings", "tests/Part_1/__init__.py", "Part_1.py", "ds-sa-pyfriend"], "setup": {"duration": 0.001285100000000039, "outcome": "passed", "stdout": "\n        -------------------------------------\n        Setting up...\n        -------------------------------------\n        \n"}, "call": {"duration": 0.0004427000000000181, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 90, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is False\n +  where False = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_blank_strings>>('')\n +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_blank_strings>> = <src.Part_1.PythonBooleans testMethod=test_about_blank_strings>.truth_function"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 90, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonBooleans testMethod=test_about_blank_strings>\n\n    def test_about_blank_strings(self):\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is self.truth_function(\"\")\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is False\nE        +  where False = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_blank_strings>>('')\nE        +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_blank_strings>> = <src.Part_1.PythonBooleans testMethod=test_about_blank_strings>.truth_function\n\nsrc\\Part_1.py:90: AssertionError"}, "teardown": {"duration": 0.0003499000000000141, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_empty_collections", "lineno": 78, "outcome": "failed", "keywords": ["PythonBooleans", "tests/Part_1/__init__.py", "Part_1.py", "ds-sa-pyfriend", "test_about_empty_collections"], "setup": {"duration": 0.00041210000000002633, "outcome": "passed"}, "call": {"duration": 0.0004490000000000327, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 84, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is False\n +  where False = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_empty_collections>>([])\n +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_empty_collections>> = <src.Part_1.PythonBooleans testMethod=test_about_empty_collections>.truth_function"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 84, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonBooleans testMethod=test_about_empty_collections>\n\n    def test_about_empty_collections(self):\n        \"\"\"\n        \uba85\uc2dc\uc801\uc778 \uac12\ub4e4\ubfd0\ub9cc \uc544\ub2c8\ub77c \uceec\ub809\uc158 \uc790\ub8cc\ud615 \ub4f1\n        \ubd88\ub9ac\uc548\uc73c\ub85c \ud45c\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4!\n        \"\"\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is self.truth_function([])\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is False\nE        +  where False = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_empty_collections>>([])\nE        +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_empty_collections>> = <src.Part_1.PythonBooleans testMethod=test_about_empty_collections>.truth_function\n\nsrc\\Part_1.py:84: AssertionError"}, "teardown": {"duration": 0.00027359999999998497, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_false", "lineno": 66, "outcome": "failed", "keywords": ["PythonBooleans", "tests/Part_1/__init__.py", "Part_1.py", "test_about_false", "ds-sa-pyfriend"], "setup": {"duration": 0.0003562999999999761, "outcome": "passed"}, "call": {"duration": 0.00033600000000000296, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 68, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is False\n +  where False = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_false>>(False)\n +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_false>> = <src.Part_1.PythonBooleans testMethod=test_about_false>.truth_function"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 68, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonBooleans testMethod=test_about_false>\n\n    def test_about_false(self):\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is self.truth_function(False)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is False\nE        +  where False = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_false>>(False)\nE        +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_false>> = <src.Part_1.PythonBooleans testMethod=test_about_false>.truth_function\n\nsrc\\Part_1.py:68: AssertionError"}, "teardown": {"duration": 0.00029260000000008723, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_none", "lineno": 69, "outcome": "failed", "keywords": ["PythonBooleans", "tests/Part_1/__init__.py", "Part_1.py", "test_about_none", "ds-sa-pyfriend"], "setup": {"duration": 0.0002926999999999236, "outcome": "passed"}, "call": {"duration": 0.00035149999999983805, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 74, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is False\n +  where False = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_none>>(None)\n +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_none>> = <src.Part_1.PythonBooleans testMethod=test_about_none>.truth_function"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 74, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonBooleans testMethod=test_about_none>\n\n    def test_about_none(self):\n        \"\"\"\n        \ud30c\uc774\uc36c\uc5d0\uc11c None \uc740 \uc5b4\ub5a4 \uac12\uc778\uac00\uc694?\n        \"\"\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is self.truth_function(None)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is False\nE        +  where False = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_none>>(None)\nE        +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_none>> = <src.Part_1.PythonBooleans testMethod=test_about_none>.truth_function\n\nsrc\\Part_1.py:74: AssertionError"}, "teardown": {"duration": 0.0002492000000000605, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_others", "lineno": 91, "outcome": "failed", "keywords": ["PythonBooleans", "tests/Part_1/__init__.py", "test_about_others", "Part_1.py", "ds-sa-pyfriend"], "setup": {"duration": 0.000415200000000171, "outcome": "passed"}, "call": {"duration": 0.00035209999999996633, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 100, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_others>>(1)\n +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_others>> = <src.Part_1.PythonBooleans testMethod=test_about_others>.truth_function"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 100, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonBooleans testMethod=test_about_others>\n\n    def test_about_others(self):\n        \"\"\"\n        \uc774\ubc88\uc5d0\ub294 \uc560\ub9e4\ud55c \uc0c1\ud669\ub4e4\uc774 \uc8fc\uc5b4\uc9d1\ub2c8\ub2e4.\n    \n        \ub744\uc5b4\uc4f0\uae30 \ud558\ub098\ub9cc \uc788\ub294 \ubb38\uc790\uc5f4\ub3c4 \ucc38\uc77c\uae4c\uc694?\n    \n        \uc774\uc678\uc5d0\ub3c4 \uad81\uae08\ud558\uc2e0 \uac83\ub4e4\uc744 \uc2e4\ud5d8\ud574\ubcf4\uc138\uc694!\n        \"\"\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is self.truth_function(1)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_others>>(1)\nE        +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_others>> = <src.Part_1.PythonBooleans testMethod=test_about_others>.truth_function\n\nsrc\\Part_1.py:100: AssertionError"}, "teardown": {"duration": 0.00024429999999986407, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_true", "lineno": 60, "outcome": "failed", "keywords": ["PythonBooleans", "tests/Part_1/__init__.py", "Part_1.py", "test_about_true", "ds-sa-pyfriend"], "setup": {"duration": 0.0003573999999999522, "outcome": "passed"}, "call": {"duration": 0.0003305999999998477, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 65, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_true>>(True)\n +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_true>> = <src.Part_1.PythonBooleans testMethod=test_about_true>.truth_function"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 65, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonBooleans testMethod=test_about_true>\n\n    def test_about_true(self):\n        \"\"\"\n        \uac00\uc7a5 \uae30\ubcf8\uc801\uc73c\ub85c True \ub97c \uba3c\uc800 \ub450\uace0 \uc5f0\uc2b5\ud558\uaca0\uc2b5\ub2c8\ub2e4.\n        \"\"\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is self.truth_function(True)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_true>>(True)\nE        +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_true>> = <src.Part_1.PythonBooleans testMethod=test_about_true>.truth_function\n\nsrc\\Part_1.py:65: AssertionError"}, "teardown": {"duration": 0.00022969999999999935, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonBooleans::test_about_zero", "lineno": 75, "outcome": "failed", "keywords": ["PythonBooleans", "tests/Part_1/__init__.py", "Part_1.py", "test_about_zero", "ds-sa-pyfriend"], "setup": {"duration": 0.0004279000000000366, "outcome": "passed"}, "call": {"duration": 0.00037039999999999296, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 77, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is False\n +  where False = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_zero>>(0)\n +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_zero>> = <src.Part_1.PythonBooleans testMethod=test_about_zero>.truth_function"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 77, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonBooleans testMethod=test_about_zero>\n\n    def test_about_zero(self):\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is self.truth_function(0)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is False\nE        +  where False = <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_zero>>(0)\nE        +    where <bound method PythonBooleans.truth_function of <src.Part_1.PythonBooleans testMethod=test_about_zero>> = <src.Part_1.PythonBooleans testMethod=test_about_zero>.truth_function\n\nsrc\\Part_1.py:77: AssertionError"}, "teardown": {"duration": 0.0004236999999998048, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_backslashes_1", "lineno": 165, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend", "test_about_backslashes_1"], "setup": {"duration": 0.0004066000000000347, "outcome": "passed"}, "call": {"duration": 0.00039789999999984005, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 172, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is ('\"Don\\'t\"' == '\"Don\\'t\"'\n    \"Don't\")"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 172, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_backslashes_1>\n\n    def test_about_backslashes_1(self):\n        \"\"\"\n        \uc870\uae08 \uc11e\uc5b4\uc11c \uc0ac\uc6a9\ub41c \ubb38\uc790\uc5f4\uc744 \uc77d\ub294 \uc5f0\uc2b5\uc744 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n        \"\"\"\n        a = \"\\\"Don't\\\"\"\n        b = '\"Don\\'t\"'\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is (a == b)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is ('\"Don\\'t\"' == '\"Don\\'t\"'\nE           \"Don't\")\n\nsrc\\Part_1.py:172: AssertionError"}, "teardown": {"duration": 0.00043239999999999945, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_backslashes_2", "lineno": 173, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "test_about_backslashes_2", "ds-sa-pyfriend"], "setup": {"duration": 0.0003809999999999647, "outcome": "passed"}, "call": {"duration": 0.00038359999999992844, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 181, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 15\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -15"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 181, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_backslashes_2>\n\n    def test_about_backslashes_2(self):\n        \"\"\"\n        \uc544\ub798 \ubb38\uc790\uc5f4\uc758 \uae38\uc774\ub97c \ud30c\uc545\ud574\ubcf4\uc138\uc694.\n    \n        \ucc98\uc74c\uc5d0 \uc0dd\uac01\ud588\ub358 \uae38\uc774\uc640 \ub9de\ub098\uc694?\n        \"\"\"\n        string = \"Batman,\\n\\Gotham\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == len(string)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 15\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -15\n\nsrc\\Part_1.py:181: AssertionError"}, "teardown": {"duration": 0.00029140000000005273, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_double_quoted_strings", "lineno": 122, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "test_about_double_quoted_strings", "ds-sa-pyfriend"], "setup": {"duration": 0.00029679999999987494, "outcome": "passed"}, "call": {"duration": 0.00032440000000000246, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 129, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = isinstance('Hello world!', str)"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 129, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_double_quoted_strings>\n\n    def test_about_double_quoted_strings(self):\n        \"\"\"\n        `isinstance` \ub77c\ub294 \ud568\uc218\ub294 \uc5b4\ub5bb\uac8c \uc0ac\uc6a9\uc774 \ub418\uace0 \uc778\uc2a4\ud134\uc2a4(instance) \ub780\n        \ubb34\uc5c7\uc77c\uae4c\uc694?\n        \"\"\"\n        string = \"Hello world!\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is isinstance(string, str)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = isinstance('Hello world!', str)\n\nsrc\\Part_1.py:129: AssertionError"}, "teardown": {"duration": 0.00032749999999981405, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_escape_characters", "lineno": 230, "outcome": "failed", "keywords": ["test_about_escape_characters", "tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.0003049000000001634, "outcome": "passed"}, "call": {"duration": 0.00040400000000007097, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 241, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == '\\n'\n  Strings contain only whitespace, escaping them using repr()\n  - '\\n'\n  + '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 241, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_escape_characters>\n\n    def test_about_escape_characters(self):\n        \"\"\"\n        \ub2e4\uc74c \ucf54\ub4dc\uc5d0\uc11c `string` \uc744 \ud45c\ud604\ud560 \uc218 \uc788\ub294 \ub450 \uac00\uc9c0 \ubc29\ubc95\uc744 \uc0dd\uac01\ud574\ubcf4\uc138\uc694!\n    \n        \uc5b4\ub5bb\uac8c \ud558\uba74 \"\\n\" \uacfc \uac19\uc740 \ubb38\uc790\uc5f4\uc744 \ub2e4\ub974\uac8c \ub098\ud0c0\ub0bc \uc218 \uc788\uc744\uae4c\uc694?\n    \n        \ub9c8\uc9c0\ub9c9\uc73c\ub85c `string` \uc758 \uae38\uc774\ub97c \ud655\uc778\ud574\ubd05\ub2c8\ub2e4.\n        \uc774\uc640 \uac19\uc740 \ub2e4\ub978 \ud2b9\uc218\ubb38\uc790\ub4e4\ub3c4 \ud55c\ubc88 \ud655\uc778\ud574\ubcf4\uc138\uc694!\n        \"\"\"\n        string = \"\\n\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == string\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == '\\n'\nE         Strings contain only whitespace, escaping them using repr()\nE         - '\\n'\nE         + '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n\nsrc\\Part_1.py:241: AssertionError"}, "teardown": {"duration": 0.00032420000000010774, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_plus_signs_1", "lineno": 217, "outcome": "failed", "keywords": ["test_about_plus_signs_1", "tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.0002915000000001111, "outcome": "passed"}, "call": {"duration": 0.0005119000000000096, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 222, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Hello, world'\n  - Hello, world\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 222, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_plus_signs_1>\n\n    def test_about_plus_signs_1(self):\n        hi = \"Hello, \"\n        there = \"world\"\n        hi += there\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == hi\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Hello, world'\nE         - Hello, world\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_1.py:222: AssertionError"}, "teardown": {"duration": 0.00031559999999997146, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_plus_signs_2", "lineno": 223, "outcome": "failed", "keywords": ["test_about_plus_signs_2", "tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.00031800000000004047, "outcome": "passed"}, "call": {"duration": 0.00041679999999999495, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 229, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Hello, '\n  - Hello, \n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 229, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_plus_signs_2>\n\n    def test_about_plus_signs_2(self):\n        original = \"Hello, \"\n        hi = original\n        there = \"world\"\n        hi += there\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == original\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Hello, '\nE         - Hello, \nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_1.py:229: AssertionError"}, "teardown": {"duration": 0.0002891000000000421, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_raw_strings", "lineno": 148, "outcome": "failed", "keywords": ["test_about_raw_strings", "tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.00028439999999996246, "outcome": "passed"}, "call": {"duration": 0.0003284000000001175, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 156, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = isinstance('Hello world!', str)"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 156, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_raw_strings>\n\n    def test_about_raw_strings(self):\n        \"\"\"\n        \ud30c\uc774\uc36c\uc5d0\uc11c \ubb38\uc790\uc5f4 \uc55e\uc5d0 'r' \uc774 \ubd99\uac8c \ub418\uba74 \ubb34\uc2a8 \ub73b\uc77c\uae4c\uc694?\n    \n        \uc77c\ubc18 \ubb38\uc790\uc5f4\uacfc \uc5b4\ub5a4 \ucc28\uc774\ub97c \uc9c0\ub154\ub294\uc9c0 \uc54c\uc544\ubcf4\uc138\uc694\n        \"\"\"\n        string = r\"Hello world!\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is isinstance(string, str)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = isinstance('Hello world!', str)\n\nsrc\\Part_1.py:156: AssertionError"}, "teardown": {"duration": 0.00030290000000010586, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_single_and_double_quotes_1", "lineno": 157, "outcome": "failed", "keywords": ["test_about_single_and_double_quotes_1", "Part_1.py", "tests/Part_1/__init__.py", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.00041040000000003296, "outcome": "passed"}, "call": {"duration": 0.0004612999999999978, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 160, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Hello, \"world!\"'\n  - Hello, \"world!\"\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 160, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_single_and_double_quotes_1>\n\n    def test_about_single_and_double_quotes_1(self):\n        string = 'Hello, \"world!\"'\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == string\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Hello, \"world!\"'\nE         - Hello, \"world!\"\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_1.py:160: AssertionError"}, "teardown": {"duration": 0.00025300000000005873, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_single_and_double_quotes_2", "lineno": 161, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "test_about_single_and_double_quotes_2", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.0003052000000001165, "outcome": "passed"}, "call": {"duration": 0.0004507000000000261, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 164, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == \"Don't\"\n  - Don't\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 164, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_single_and_double_quotes_2>\n\n    def test_about_single_and_double_quotes_2(self):\n        string = \"Don't\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == string\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == \"Don't\"\nE         - Don't\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_1.py:164: AssertionError"}, "teardown": {"duration": 0.0002405999999999242, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_single_quoted_strings", "lineno": 130, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend", "test_about_single_quoted_strings"], "setup": {"duration": 0.0002766999999999076, "outcome": "passed"}, "call": {"duration": 0.00031660000000011124, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 136, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = isinstance('Hello world!', str)"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 136, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_single_quoted_strings>\n\n    def test_about_single_quoted_strings(self):\n        \"\"\"\n        \ud30c\uc774\uc36c\uc5d0\uc11c\ub294 ' \uc640 \" \ub97c \ub458 \ub2e4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4\n        \"\"\"\n        string = 'Hello world!'\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is isinstance(string, str)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = isinstance('Hello world!', str)\n\nsrc\\Part_1.py:136: AssertionError"}, "teardown": {"duration": 0.00038000000000004697, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_string_concatenation_1", "lineno": 204, "outcome": "failed", "keywords": ["test_about_string_concatenation_1", "tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.00033370000000010336, "outcome": "passed"}, "call": {"duration": 0.00042000000000008697, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 207, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Hello, world'\n  - Hello, world\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 207, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_string_concatenation_1>\n\n    def test_about_string_concatenation_1(self):\n        string = \"Hello, \" + \"world\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == string\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Hello, world'\nE         - Hello, world\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_1.py:207: AssertionError"}, "teardown": {"duration": 0.0003348999999999158, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_string_concatenation_2", "lineno": 208, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "test_about_string_concatenation_2", "ds-sa-pyfriend"], "setup": {"duration": 0.0003393999999998787, "outcome": "passed"}, "call": {"duration": 0.00045890000000015085, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 216, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Hello, world'\n  - Hello, world\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 216, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_string_concatenation_2>\n\n    def test_about_string_concatenation_2(self):\n        \"\"\"\n        \uc544\ub798 \ubb38\uc790\uc5f4\uc740 \uc5d0\ub7ec\uac00 \ub0a0\uae4c\uc694?\n    \n        \ud30c\uc774\uc36c\uc758 \ubb38\uc790\uc5f4 concatenation \uc5d0 \ub300\ud574\uc11c \ub354 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4\n        \"\"\"\n        string = \"Hello\" \", \" \"world\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == string\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Hello, world'\nE         - Hello, world\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_1.py:216: AssertionError"}, "teardown": {"duration": 0.0002956999999998988, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_triple_quote_strings", "lineno": 137, "outcome": "failed", "keywords": ["test_about_triple_quote_strings", "tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.0003922000000000647, "outcome": "passed"}, "call": {"duration": 0.0003497999999999557, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 143, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = isinstance('Hello world!', str)"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 143, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_triple_quote_strings>\n\n    def test_about_triple_quote_strings(self):\n        \"\"\"\n        \uc9c0\uae08 \uc8fc\uc11d\uc5d0\uc11c\ub3c4 \ubcf4\uc2e4 \uc218 \uc788\ub4ef\uc774 \\\"\"\" \ub294 \uc5b4\ub5a4 \uc758\ubbf8\ub97c \uac00\uc9c8\uae4c\uc694?\n        \"\"\"\n        string = \"\"\"Hello world!\"\"\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is isinstance(string, str)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = isinstance('Hello world!', str)\n\nsrc\\Part_1.py:143: AssertionError"}, "teardown": {"duration": 0.00042080000000011, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_triple_quoted_strings_1", "lineno": 182, "outcome": "failed", "keywords": ["test_about_triple_quoted_strings_1", "tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.00031760000000002897, "outcome": "passed"}, "call": {"duration": 0.0003527000000000946, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 193, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 15\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -15"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 193, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_triple_quoted_strings_1>\n\n        def test_about_triple_quoted_strings_1(self):\n            \"\"\"\n            \uc544\ub798 \ubb38\uc790\uc5f4\uc740 \uae38\uc774\uac00 \uc5b4\ub5a8\uae4c\uc694?\n    \n            \ucc98\uc74c\uc5d0 \uc0dd\uac01\ud588\ub358 \uae38\uc774\uc640 \ub9de\ub098\uc694?\n            \"\"\"\n            string = \"\"\"\n    Hello,\n    world!\n    \"\"\"\n>           assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == len(string)\nE           AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 15\nE             +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE             -15\n\nsrc\\Part_1.py:193: AssertionError"}, "teardown": {"duration": 0.00023659999999980919, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_triple_quoted_strings_2", "lineno": 194, "outcome": "failed", "keywords": ["test_about_triple_quoted_strings_2", "tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.00028329999999998634, "outcome": "passed"}, "call": {"duration": 0.00039290000000002934, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 203, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is ('Hello \"world\".' == 'Hello \"world\".'\n    Hello \"world\".)"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 203, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_triple_quoted_strings_2>\n\n    def test_about_triple_quoted_strings_2(self):\n        \"\"\"\n        \uc544\ub798 \ub450 \ubb38\uc790\uc5f4\uc740 \uacfc\uc5f0 \uac19\uc744\uae4c\uc694?\n    \n        \ube44\uad50\ub97c \ud574\ubcf4\uc2dc\uace0 \ub450 \ubb38\uc790\uc5f4\uc774 \uac19\uc73c\uba74 True, \uc544\ub2c8\uba74 False \ub97c \ub123\uc5b4\uc8fc\uc138\uc694\n        \"\"\"\n        a = \"Hello \\\"world\\\".\"\n        b = \"\"\"Hello \"world\".\"\"\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is (a == b)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is ('Hello \"world\".' == 'Hello \"world\".'\nE           Hello \"world\".)\n\nsrc\\Part_1.py:203: AssertionError"}, "teardown": {"duration": 0.0003196999999999228, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonStrings::test_about_triple_single_quotes", "lineno": 144, "outcome": "failed", "keywords": ["test_about_triple_single_quotes", "tests/Part_1/__init__.py", "Part_1.py", "PythonStrings", "ds-sa-pyfriend"], "setup": {"duration": 0.0002964000000000855, "outcome": "passed"}, "call": {"duration": 0.00033199999999999896, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 147, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = isinstance('Hello world!', str)"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 147, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonStrings testMethod=test_about_triple_single_quotes>\n\n    def test_about_triple_single_quotes(self):\n        string = '''Hello world!'''\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is isinstance(string, str)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = isinstance('Hello world!', str)\n\nsrc\\Part_1.py:147: AssertionError"}, "teardown": {"duration": 0.0005058000000000007, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_insert", "lineno": 353, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "PythonLists", "test_about_insert", "ds-sa-pyfriend"], "setup": {"duration": 0.0004175000000001816, "outcome": "passed"}, "call": {"duration": 0.00037469999999983905, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 362, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == ['you', 'shal...'not', 'pass']\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -['you', 'shall', 'not', 'pass']"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 362, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonLists testMethod=test_about_insert>\n\n    def test_about_insert(self):\n        \"\"\"\n        \ub9ac\uc2a4\ud2b8\uc5d0 \ud56d\ubaa9\uc744 \ucd94\uac00\ud560 \ub54c\uc5d0\ub294 \uc5b4\ub5bb\uac8c \ud558\ub294\uc9c0 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        insert \uc640 append \uc758 \ucc28\uc774\uc810\uc740 \ubb34\uc5c7\uc778\uc9c0 \uc0b4\ud3b4\ubd05\ub2c8\ub2e4.\n        \"\"\"\n        gandalf=['you', 'shall', 'pass']\n        gandalf.insert(2, 'not')\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == gandalf\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == ['you', 'shal...'not', 'pass']\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -['you', 'shall', 'not', 'pass']\n\nsrc\\Part_1.py:362: AssertionError"}, "teardown": {"duration": 0.00024409999999996934, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_list_and_ranges_1", "lineno": 325, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "test_about_list_and_ranges_1", "PythonLists", "ds-sa-pyfriend"], "setup": {"duration": 0.000289600000000112, "outcome": "passed"}, "call": {"duration": 0.000493099999999913, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 336, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is ([1, 2, 3, 4, 5] == range(1, 6)\n  Full diff:\n  - range(1, 6)\n  + [1, 2, 3, 4, 5])"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 336, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonLists testMethod=test_about_list_and_ranges_1>\n\n    def test_about_list_and_ranges_1(self):\n        \"\"\"\n        range \ub294 \uc5b4\ub5bb\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub098\uc694?\n        \ub9ac\uc2a4\ud2b8\uc640\ub294 \uc5b4\ub5bb\uac8c \ud65c\uc6a9\ud560 \uc218 \uc788\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        `range(1, 6)` \ub97c \uadf8\ub0e5 \uc0ac\uc6a9\ud558\uac8c \ub418\uba74 `[1, 2, 3, 4, 5]` \uac00 \ub420\uae4c\uc694?\n    \n        range \ub97c \ud65c\uc6a9\ud574 \ub9ac\uc2a4\ud2b8\ub97c \ub9cc\ub4e4\uc5c8\uc744 \ub54c \uc5b4\ub5a4 \ud56d\ubaa9\ub4e4\uc774 \ub4e4\uc5b4\uac00\ub098\uc694?\n        \"\"\"\n        assert range == type(range(5))\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is ([1, 2, 3, 4, 5] == range(1, 6))\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is ([1, 2, 3, 4, 5] == range(1, 6)\nE         Full diff:\nE         - range(1, 6)\nE         + [1, 2, 3, 4, 5])\n\nsrc\\Part_1.py:336: AssertionError"}, "teardown": {"duration": 0.00032919999999991845, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_list_and_ranges_2", "lineno": 339, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "PythonLists", "test_about_list_and_ranges_2", "ds-sa-pyfriend"], "setup": {"duration": 0.0003538000000000707, "outcome": "passed"}, "call": {"duration": 0.0004303000000001056, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 348, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == [5, 4]\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -[5, 4]"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 348, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonLists testMethod=test_about_list_and_ranges_2>\n\n    def test_about_list_and_ranges_2(self):\n        \"\"\"\n        range \uc5d0 \ub300\ud574\uc11c \ub354 \uc54c\uc544\ubd05\ub2c8\ub2e4.\n    \n        \ub2e4\uc74c \ucf54\ub4dc\ub4e4\uc5d0\uc11c \uc0dd\uc131\ub41c \ub9ac\uc2a4\ud2b8\ub97c \ub9cc\ub4e4\uc5b4\ubcf4\uc138\uc694!\n    \n        \uc608\ub97c \ub4e4\uc5b4 `list(range(6, 2, -3))` \uc740 \uc5b4\ub5a4 \uacb0\uacfc\ub97c \ubcf4\uc5ec\uc8fc\ub098\uc694?\n        \"\"\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == list(range(5, 3, -1))\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == [5, 4]\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -[5, 4]\n\nsrc\\Part_1.py:348: AssertionError"}, "teardown": {"duration": 0.0003294000000000352, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_list_creation", "lineno": 256, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "PythonLists", "ds-sa-pyfriend", "test_about_list_creation"], "setup": {"duration": 0.0003249999999999087, "outcome": "passed"}, "call": {"duration": 0.0004347999999998464, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 265, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == \"<class 'list'>\"\n  - <class 'list'>\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 265, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonLists testMethod=test_about_list_creation>\n\n    def test_about_list_creation(self):\n        \"\"\"\n        \uc81c\uc77c \uba3c\uc800 \ub9ac\uc2a4\ud2b8\ub294 \uc5b4\ub5a4 \ub370\uc774\ud130 \ud0c0\uc785\uc778\uc9c0 \uae38\uc774\ub294 \uc5b4\ub5bb\uac8c \ub418\ub294\uc9c0\n        \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \ub9ac\uc2a4\ud2b8\uc758 \ud0c0\uc785\uc744 \ud655\uc778\ud558\uba74 \ub098\uc624\ub294 \ubb38\uc790\uc5f4\uc744 \uc774\uc6a9\ud574 \ud1b5\uacfc\ud574\ubcf4\uc138\uc694!\n        \"\"\"\n        empty_list = list()\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == str(type(empty_list))\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == \"<class 'list'>\"\nE         - <class 'list'>\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_1.py:265: AssertionError"}, "teardown": {"duration": 0.00022809999999995334, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_list_elements", "lineno": 286, "outcome": "failed", "keywords": ["test_about_list_elements", "tests/Part_1/__init__.py", "Part_1.py", "PythonLists", "ds-sa-pyfriend"], "setup": {"duration": 0.0002674000000000287, "outcome": "passed"}, "call": {"duration": 0.00035959999999990444, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 298, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'once'\n  - once\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 298, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonLists testMethod=test_about_list_elements>\n\n    def test_about_list_elements(self):\n        \"\"\"\n        \ud30c\uc774\uc36c\uc758 \ub9ac\uc2a4\ud2b8\uc758 \uc778\ub371\uc2a4\ub294 \uc5b4\ub5a4\uc9c0 \ud655\uc778\ud574 \ubd05\ub2c8\ub2e4.\n    \n        \ub4a4\uc5d0\uc11c\ubd80\ud130 \uc811\uadfc\ud560 \uc218 \uc788\ub294 \uc778\ub371\uc2a4\ub97c \uc798 \ud65c\uc6a9\ud558\uba74 \ub9e4\uc6b0 \ud3b8\ub9ac\ud574\uc9c8 \uc218\ub3c4\n        \uc788\uc2b5\ub2c8\ub2e4.\n    \n        \uac01 \ud56d\ubaa9\uc774 \uc5b4\ub5a4 \ub2e8\uc5b4\ub97c \uac00\ub9ac\ud0a4\ub294\uc9c0 \ud30c\uc545\ud558\uc2e4 \uc218 \uc788\ub098\uc694?\n        \"\"\"\n        story = ['once', 'upon', 'a', 'time']\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == story[0]\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'once'\nE         - once\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_1.py:298: AssertionError"}, "teardown": {"duration": 0.00023839999999997197, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_list_literals", "lineno": 267, "outcome": "failed", "keywords": ["test_about_list_literals", "tests/Part_1/__init__.py", "Part_1.py", "PythonLists", "ds-sa-pyfriend"], "setup": {"duration": 0.00028239999999990495, "outcome": "passed"}, "call": {"duration": 0.0004041999999999657, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 276, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == []\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -[]"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 276, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonLists testMethod=test_about_list_literals>\n\n    def test_about_list_literals(self):\n        \"\"\"\n        \ud30c\uc774\uc36c\uc5d0\uc11c \ub9ac\uc2a4\ud2b8\uc5d0 \ud56d\ubaa9\uc744 \ucd94\uac00\ud558\ub294 \ubc29\ubc95\uc740 \uc5b4\ub5a4\uac00\uc694?\n    \n        `append` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c\ub3c4 \ucd94\uac00\ud560 \uc218 \uc788\uc9c0\ub9cc\n        \uc774\uc678\uc5d0 \uc5b4\ub5a4 \ubc29\ubc95\uc744 \ucd94\uac00\ud560 \uc218 \uc788\ub294\uc9c0 \uc54c\uc544\ubd05\ub2c8\ub2e4.\n        \"\"\"\n        nums = list()\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == nums\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == []\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -[]\n\nsrc\\Part_1.py:276: AssertionError"}, "teardown": {"duration": 0.00023509999999982156, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_pop", "lineno": 366, "outcome": "failed", "keywords": ["test_about_pop", "Part_1.py", "tests/Part_1/__init__.py", "PythonLists", "ds-sa-pyfriend"], "setup": {"duration": 0.0003332999999998698, "outcome": "passed"}, "call": {"duration": 0.00040709999999988256, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 376, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == [10, 20, 30, 40, 'last']\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -[10, 20, 30, 40, 'last']"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 376, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonLists testMethod=test_about_pop>\n\n    def test_about_pop(self):\n        \"\"\"\n        \ub9ac\uc2a4\ud2b8\uc5d0 \ub2e4\ub978 \uba54\uc18c\ub4dc\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        pop \ubc0f \ub2e4\ub978 \uba54\uc18c\ub4dc\ub4e4\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubd05\ub2c8\ub2e4.\n        \"\"\"\n        stack=[10, 20, 30, 40]\n        stack.append('last')\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == stack\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == [10, 20, 30, 40, 'last']\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -[10, 20, 30, 40, 'last']\n\nsrc\\Part_1.py:376: AssertionError"}, "teardown": {"duration": 0.00029620000000019076, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_slicing_lists_1", "lineno": 302, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "PythonLists", "ds-sa-pyfriend", "test_about_slicing_lists_1"], "setup": {"duration": 0.00036220000000009023, "outcome": "passed"}, "call": {"duration": 0.00034660000000008573, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 312, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == ['once']\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -['once']"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 312, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonLists testMethod=test_about_slicing_lists_1>\n\n    def test_about_slicing_lists_1(self):\n        \"\"\"\n        \ub9ac\uc2a4\ud2b8\ub97c \uc790\ub974\ub294 \uac83\uc744 \ud754\ud788 slicing \uc774\ub77c\uace0 \ud569\ub2c8\ub2e4.\n    \n        \ud30c\uc774\uc36c\uc5d0\uc11c\ub294 \uc2ac\ub77c\uc774\uc2f1\uc744 \uc5b4\ub5bb\uac8c \ud560 \uc218 \uc788\uace0 \ub9ac\uc2a4\ud2b8\uc758 \ubc94\uc704\ub97c \ubc97\uc5b4\ub098\ub294\n        \uacbd\uc6b0\ub4e4\uc5d0\ub294 \uc5b4\ub5bb\uac8c \ud574\uc57c \ud560\uae4c\uc694?\n        \"\"\"\n        story = ['once', 'upon', 'a', 'time']\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == story[0:1]\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == ['once']\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -['once']\n\nsrc\\Part_1.py:312: AssertionError"}, "teardown": {"duration": 0.0002572999999999048, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonLists::test_about_slicing_lists_2", "lineno": 319, "outcome": "failed", "keywords": ["test_about_slicing_lists_2", "tests/Part_1/__init__.py", "Part_1.py", "PythonLists", "ds-sa-pyfriend"], "setup": {"duration": 0.00027860000000012874, "outcome": "passed"}, "call": {"duration": 0.0003500999999999088, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 323, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == ['a', 'time']\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -['a', 'time']"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 323, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonLists testMethod=test_about_slicing_lists_2>\n\n    def test_about_slicing_lists_2(self):\n        story = ['once', 'upon', 'a', 'time']\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == story[2:]\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == ['a', 'time']\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -['a', 'time']\n\nsrc\\Part_1.py:323: AssertionError"}, "teardown": {"duration": 0.00036170000000002034, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_accessing_dictionaries", "lineno": 417, "outcome": "failed", "keywords": ["test_about_accessing_dictionaries", "tests/Part_1/__init__.py", "Part_1.py", "PythonDictionaries", "ds-sa-pyfriend"], "setup": {"duration": 0.0003269999999999662, "outcome": "passed"}, "call": {"duration": 0.00036690000000016987, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 425, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'paris'\n  - paris\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 425, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonDictionaries testMethod=test_about_accessing_dictionaries>\n\n    def test_about_accessing_dictionaries(self):\n        \"\"\"\n        \ub515\uc154\ub108\ub9ac\uc5d0\uc11c \uc6d0\ud558\ub294 \uac12\uc5d0 \uc811\uadfc\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \uc544\ub798\uc640 \uac19\uc774 \uc811\uadfc\ud558\uac8c \ub418\uba74 \uc5b4\ub5a4 \uac12\ub4e4\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc744\uae4c\uc694?\n        \"\"\"\n        cities={'france': 'paris', 'korea': 'seoul'}\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == cities['france']\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'paris'\nE         - paris\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_1.py:425: AssertionError"}, "teardown": {"duration": 0.0003329999999999167, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_changing_dictionaries", "lineno": 427, "outcome": "failed", "keywords": ["test_about_changing_dictionaries", "tests/Part_1/__init__.py", "Part_1.py", "PythonDictionaries", "ds-sa-pyfriend"], "setup": {"duration": 0.00036839999999993545, "outcome": "passed"}, "call": {"duration": 0.000398400000000132, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 439, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == {'france': 'l...rea': 'seoul'}\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -{'france': 'lyon', 'korea': 'seoul'}"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 439, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonDictionaries testMethod=test_about_changing_dictionaries>\n\n    def test_about_changing_dictionaries(self):\n        \"\"\"\n        \ub515\uc154\ub108\ub9ac\uc5d0 \uc800\uc7a5\ub41c \uac12\ub4e4\uc740 \ubd88\ubcc0\uc774 \uc544\ub2d9\ub2c8\ub2e4.\n    \n        \uadf8\ub807\ub2e4\uba74 \uc5b4\ub5bb\uac8c \ub515\uc154\ub108\ub9ac\uc5d0 \uc800\uc7a5\ub41c \uac12\ub4e4\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub294\uc9c0\n        \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n        \"\"\"\n        cities={'france': 'paris', 'korea': 'seoul'}\n        cities['france'] = 'lyon'\n    \n        expected = {'korea': 'seoul', 'france': \"lyon\"}\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == cities\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == {'france': 'l...rea': 'seoul'}\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -{'france': 'lyon', 'korea': 'seoul'}\n\nsrc\\Part_1.py:439: AssertionError"}, "teardown": {"duration": 0.00033749999999987956, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_dictionary_creation", "lineno": 398, "outcome": "failed", "keywords": ["test_about_dictionary_creation", "tests/Part_1/__init__.py", "Part_1.py", "PythonDictionaries", "ds-sa-pyfriend"], "setup": {"duration": 0.0003102999999999856, "outcome": "passed"}, "call": {"duration": 0.00045589999999995356, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 407, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == \"<class 'dict'>\"\n  - <class 'dict'>\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 407, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonDictionaries testMethod=test_about_dictionary_creation>\n\n    def test_about_dictionary_creation(self):\n        \"\"\"\n        \ud30c\uc774\uc36c \ub515\uc154\ub108\ub9ac \uc0dd\uc131\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \ub515\uc154\ub108\ub9ac\ub294 \uc5b4\ub5bb\uac8c \uc0dd\uc131\ud560 \uc218 \uc788\uc744\uae4c\uc694?\n        \ub515\uc154\ub108\ub9ac\uc758 \ud0c0\uc785\uc740 \ubb54\uac00\uc694?\n        \"\"\"\n        empty_dict=dict()\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == str(type(empty_dict))\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == \"<class 'dict'>\"\nE         - <class 'dict'>\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_1.py:407: AssertionError"}, "teardown": {"duration": 0.00024919999999983844, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_dictionary_literals", "lineno": 410, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "PythonDictionaries", "ds-sa-pyfriend", "test_about_dictionary_literals"], "setup": {"duration": 0.00026809999999999334, "outcome": "passed"}, "call": {"duration": 0.000342400000000076, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 413, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == <class 'dict'>\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -<class 'dict'>"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 413, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonDictionaries testMethod=test_about_dictionary_literals>\n\n    def test_about_dictionary_literals(self):\n        empty_dict={}\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == type(empty_dict)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == <class 'dict'>\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -<class 'dict'>\n\nsrc\\Part_1.py:413: AssertionError"}, "teardown": {"duration": 0.00022940000000004623, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_dictionary_order", "lineno": 440, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "test_about_dictionary_order", "PythonDictionaries", "ds-sa-pyfriend"], "setup": {"duration": 0.0003378000000000547, "outcome": "passed"}, "call": {"duration": 0.000545099999999854, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 452, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is ({'france': 'p...rea': 'seoul'} == {'france': 'p...rea': 'seoul'}\n  Omitting 2 identical items, use -vv to show\n  Full diff:\n    {'france': 'paris', 'korea': 'seoul'})"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 452, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonDictionaries testMethod=test_about_dictionary_order>\n\n    def test_about_dictionary_order(self):\n        \"\"\"\n        \ub515\uc154\ub108\ub9ac\ub294 \ubd84\uba85 \ub9ac\uc2a4\ud2b8\uc640 \ub2e4\ub985\ub2c8\ub2e4.\n    \n        \uc21c\uc11c\ub300\ub85c \uc778\ub371\uc2a4\uac00 \uc874\uc7ac\ud558\ub294 \uac83\ub3c4 \uc544\ub2c8\uace0 \ud0a4-\uac12\uc73c\ub85c \uc774\ub8e8\uc5b4\uc9c4 \ud615\ud0dc\uc785\ub2c8\ub2e4.\n    \n        \uadf8\ub807\ub2e4\uba74 \ub515\uc154\ub108\ub9ac\ub4e4\uc744 \ube44\uad50\ud560 \ub54c \ud0a4-\uac12\ub4e4\uc774 \uc21c\uc11c\ub85c \ub4e4\uc5b4\uac00\uc57c \ud560\uae4c\uc694?\n        \"\"\"\n        dict1={'france': 'paris', 'korea': 'seoul'}\n        dict2={'korea': 'seoul', 'france': 'paris'}\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is (dict1 == dict2)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is ({'france': 'p...rea': 'seoul'} == {'france': 'p...rea': 'seoul'}\nE         Omitting 2 identical items, use -vv to show\nE         Full diff:\nE           {'france': 'paris', 'korea': 'seoul'})\n\nsrc\\Part_1.py:452: AssertionError"}, "teardown": {"duration": 0.0002470999999999446, "outcome": "passed"}}, {"nodeid": "tests/Part_1/Part_1.py::PythonDictionaries::test_about_keys_and_values", "lineno": 453, "outcome": "failed", "keywords": ["tests/Part_1/__init__.py", "Part_1.py", "test_about_keys_and_values", "PythonDictionaries", "ds-sa-pyfriend"], "setup": {"duration": 0.0003983000000000736, "outcome": "passed"}, "call": {"duration": 0.0003763000000001071, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_1.py", "lineno": 463, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 2\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -2"}, "traceback": [{"path": "src\\Part_1.py", "lineno": 463, "message": "AssertionError"}], "longrepr": "self = <src.Part_1.PythonDictionaries testMethod=test_about_keys_and_values>\n\n    def test_about_keys_and_values(self):\n        \"\"\"\n        \uc774\ubc88\uc5d0\ub294 \ud30c\uc774\uc36c \ub515\uc154\ub108\ub9ac\uc758 \uba54\uc18c\ub4dc\ub4e4\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        `keys()` \ub098 `values()` \ub4f1\uc744 \uc0ac\uc6a9\ud558\uba74 \ub354 \uc798 \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n    \n        \ub2e4\ub978 \uba54\uc18c\ub4dc\ub4e4\uc740 \uc5b4\ub5a4 \uac83\ub4e4\uc774 \uc788\uc744\uae4c\uc694?\n        \"\"\"\n        cities={'france': 'paris', 'korea': 'seoul'}\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == len(cities.keys())\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 2\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -2\n\nsrc\\Part_1.py:463: AssertionError"}, "teardown": {"duration": 0.001096300000000161, "outcome": "passed", "stdout": "\n        -------------------------------------\n        Tearing down...\n        -------------------------------------\n        \n"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_class_docstrings", "lineno": 43, "outcome": "failed", "keywords": ["tests/Part_2/__init__.py", "test_about_class_docstrings", "Part_2.py", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.00120269999999989, "outcome": "passed", "stdout": "\n        -------------------------------------\n        Setting up...\n        -------------------------------------\n        \n"}, "call": {"duration": 0.0004182999999999826, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 54, "message": "AssertionError: assert 'There are ma...ifferent cars' == '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  - \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n  + There are many different cars"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 54, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_class_docstrings>\n\n    def test_about_class_docstrings(self):\n        \"\"\"\n        `__doc__` \uc740 \uc5b8\uc81c \uc0ac\uc6a9\uc774 \ub418\uace0 \uc5b4\ub5a4 \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\uc774 \ub420\uae4c\uc694?\n    \n        \ud30c\uc774\uc36c\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4\uc5d0\uc11c\ub3c4 \uc774\ub7f0 \uc18d\uc131\uc774 \uc5b4\ub5bb\uac8c \ub3c4\uc6c0\uc774\n        \ub420\uae4c\uc694?\n    \n        \uc608\ub97c \ub4e4\uc5b4 pandas \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\uc11c \uc0dd\uc131\ud558\ub294 `Dataframe` \ub3c4 \uc774\ub7ec\ud55c \uc18d\uc131\uc774\n        \uc788\uc744\uae4c\uc694?\n        \"\"\"\n>       assert self.Car.__doc__ == \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\"\nE       AssertionError: assert 'There are ma...ifferent cars' == '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         - \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\nE         + There are many different cars\n\nsrc\\Part_2.py:54: AssertionError"}, "teardown": {"duration": 0.00027980000000016325, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_class_property", "lineno": 121, "outcome": "failed", "keywords": ["test_about_class_property", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py", "PythonClasses"], "setup": {"duration": 0.00029530000000010936, "outcome": "passed"}, "call": {"duration": 0.00026260000000011274, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 143, "message": "AttributeError: 'Car3' object has no attribute '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 143, "message": "AttributeError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_class_property>\n\n    def test_about_class_property(self):\n        \"\"\"\n        \ud074\ub798\uc2a4\uc5d0 \uc788\ub294 \uc18d\uc131\uc744 \uc811\uadfc\ud558\ub294 \ub450\uac00\uc9c0 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \uba3c\uc800 \uba54\uc18c\ub4dc\ub85c \uc811\uadfc\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n        \"SuperCar\" \uc18d\uc131\uc744 \uc811\uadfc\ud558\uae30 \uc704\ud574\uc11c\ub294 `getattr()` \ub97c \uc5b4\ub5bb\uac8c \ud65c\uc6a9\ud574\uc57c \ud560\uae4c\uc694?\n    \n        \ub2e4\uc74c\uc740 \uba54\uc18c\ub4dc\uac00 \uc544\ub2cc \uc18d\uc131\uc73c\ub85c \uc811\uadfc\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \uc704 \ucf54\ub4dc\uc5d0\uc11c Car3 \ud074\ub798\uc2a4\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uc18d\uc131\uc774 \"SuperCar\" \uc5d0 \uc811\uadfc\ud558\uac8c\n        \ud574\uc8fc\ub098\uc694?\n    \n        \ucd94\uac00\ub85c `_name` \uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. `_name` \uc740 \uc678\ubd80\uc5d0\uc11c \uc811\uadfc\ud558\uc9c0\n        \ub9d0\ub77c\uace0 _ \uc774 \uc788\uc2b5\ub2c8\ub2e4.\n    \n        # NOTE: `property` \ud568\uc218\ub294 \uc5b4\ub5bb\uac8c \ub3d9\uc791\ud558\ub294 \ud568\uc218\uc778\uac00\uc694?\n        \"\"\"\n    \n        new_car = self.Car3()\n        new_car.set_name(\"SuperCar\")\n    \n>       assert getattr(new_car, \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\") == \"SuperCar\"\nE       AttributeError: 'Car3' object has no attribute '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n\nsrc\\Part_2.py:143: AttributeError"}, "teardown": {"duration": 0.00031079999999983343, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_decorators", "lineno": 159, "outcome": "failed", "keywords": ["test_about_decorators", "tests/Part_2/__init__.py", "Part_2.py", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.00038040000000005847, "outcome": "passed"}, "call": {"duration": 0.0004059000000000701, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 183, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'SuperCar'\n  - SuperCar\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 183, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_decorators>\n\n    def test_about_decorators(self):\n        \"\"\"\n        \ud074\ub798\uc2a4\uc5d0\uc11c `@property` \uc5d0 \ub300\ud574\uc11c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \uc65c `@property` \ub97c \uc0ac\uc6a9\ud560\uae4c\uc694? \uadf8\ub0e5 \ubcc0\uc218\ub97c \uc9c1\uc811 \uc811\uadfc\ud558\uc9c0 \uc54a\ub294 \uc774\uc720\ub294\n        \uc678\ubd80\uc5d0\uc11c \uc123\ubd88\ub9ac \uc811\uadfc\ud588\ub2e4\uac00 \ub0b4\ubd80\uc801\uc73c\ub85c \uc608\uae30\uce58 \ubabb\ud55c \uc624\ub958\ub97c \ubc1c\uc0dd\ud560 \uc218\ub3c4\n        \uc788\uc2b5\ub2c8\ub2e4. \ubb3c\ub860 \uc774\uc678\uc5d0\ub3c4 \ud074\ub798\uc2a4\uc5d0\uc11c\ub9cc \uc811\uadfc\ud574\uc57c \ud558\ub294 \ucf54\ub4dc\ub97c \uc678\ubd80\uc5d0\uc11c\n        \uc811\uadfc\ud558\ub294 \uac83 \uc790\uccb4\uc5d0 \ub300\ud55c \ubd80\ubd84\ub3c4 \uc870\uc2ec\ud574\uc57c \ud569\ub2c8\ub2e4.\n    \n        \uadf8\ub807\ub2e4\uba74 \uc704 \ucf54\ub4dc\uc5d0\uc11c `@name.setter` \uc5d0\uc11c `@name` \uc740 \uc5b4\ub514\uc5d0\uc11c\n        \ub098\uc654\uc744\uae4c\uc694?\n    \n        # NOTE: decorator \uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubcf4\uc138\uc694. \ud30c\uc774\uc36c\uc5d0\uc11c\ub294 decorator \uac00 '@'\n        # \ud45c\uc2dc\ub97c \uc774\uc6a9\ud574 \uc0ac\uc6a9\uc774 \ub429\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc704 \ucf54\ub4dc\uac00 \uc5b4\ub5bb\uac8c \uc791\ub3d9\ud558\ub294\uc9c0\n        # \ud558\ub098\ubd80\ud130 \uc5f4\uae4c\uc9c0 \uc9c0\uae08 \uc544\uc2e4 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \uc9c0\uae08\uc740 \ud30c\uc774\uc36c\uc5d0\uc11c\n        # decorator \uac00 \uc5b4\ub5bb\uac8c \ub3d9\uc791\ud558\ub294\uc9c0\uc5d0\ub9cc \uc9d1\uc911\uc744 \ud574\uc8fc\uc138\uc694\n        \"\"\"\n        new_car = self.Car4()\n    \n        # \uc774 \ubc29\ubc95\uc774 \uc5b4\ub5bb\uac8c \uc791\ub3d9\ud558\ub294 \uac78\uae4c\uc694?\n        new_car.name = \"SuperCar\"\n    \n        # new_car \uc758 \uc774\ub984\uc744 \uc5b4\ub5bb\uac8c \ubc1b\uc544\uc62c \uc218 \uc788\uc744\uae4c\uc694? `_name` \uc740 \uc544\ub2d9\ub2c8\ub2e4!\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == \"SuperCar\"\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'SuperCar'\nE         - SuperCar\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:183: AssertionError"}, "teardown": {"duration": 0.0002642999999999951, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_getattr_and_dict", "lineno": 86, "outcome": "failed", "keywords": ["test_about_getattr_and_dict", "tests/Part_2/__init__.py", "Part_2.py", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.00037960000000003546, "outcome": "passed"}, "call": {"duration": 0.0004636999999998448, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 105, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'SuperCar'\n  - SuperCar\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 105, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_getattr_and_dict>\n\n    def test_about_getattr_and_dict(self):\n        \"\"\"\n        \uc774\ubc88\uc5d0\ub294 `getattr()` \uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        get \uacfc attribute \uc758 \uc904\uc778\ub9d0\uc778 attr \uc744 \ud569\uce5c \uac83 \uac19\uc740 \uc774 \ud568\uc218\ub294 \uc5b4\ub5bb\uac8c\n        \uc0ac\uc6a9\ud560 \uc218 \uc788\uc744\uae4c\uc694?\n    \n        \ub610\ud55c `setattr()`, `delattr()` \ub4f1 \ub2e4\ub978 \ud568\uc218\ub4e4\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n    \n        `__dict__` \uc740 \ud56d\uc0c1 \uc6d0\ud558\ub294 \ub300\ub85c \uc791\ub3d9\ud560\uae4c\uc694?\n    \n        \ud074\ub798\uc2a4\uc5d0 `__dict__` \ud568\uc218\ub97c \ub530\ub85c \ub9cc\ub4e0\ub2e4\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694?\n    \n        \uc774\ub7ec\ud55c \ud2b9\ubcc4 \uba54\uc18c\ub4dc\ub4e4\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc54c\uc544\ubd05\ub2c8\ub2e4.\n        \"\"\"\n        new_car = self.Car2()\n        new_car.set_name(\"SuperCar\")\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == getattr(new_car, \"_name\")\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'SuperCar'\nE         - SuperCar\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:105: AssertionError"}, "teardown": {"duration": 0.0002478999999999676, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_init_and_instance", "lineno": 194, "outcome": "failed", "keywords": ["test_about_init_and_instance", "tests/Part_2/__init__.py", "Part_2.py", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.00034589999999989907, "outcome": "passed"}, "call": {"duration": 0.00040960000000000996, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 208, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'SuperCar'\n  - SuperCar\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 208, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_init_and_instance>\n\n    def test_about_init_and_instance(self):\n        \"\"\"\n        \ud30c\uc774\uc36c\uc758 \uc0dd\uc131\uc790 \ud568\uc218\uc640 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud574\uc11c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \uc0dd\uc131\uc790 \ud568\uc218\ub294 \ub9d0 \uadf8\ub300\ub85c '\uc0dd\uc131' \ud574\uc8fc\ub294 \ud568\uc218\uc785\ub2c8\ub2e4. \uad6c\uccb4\uc801\uc73c\ub85c\ub294 \ud574\ub2f9\n        \ud568\uc218\ub97c \ud1b5\ud574 \ud558\ub098\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n    \n        \uc0dd\uc131\uc790 \ud568\uc218\ub294 \uc77c\ubc18 \ud568\uc218\ucc98\ub7fc \ud30c\ub77c\ubbf8\ud130\ub97c \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n        `Car5` \uc640 \uac19\uc740 \uacbd\uc6b0\uc5d0\ub294 `initial_name` \uc744 \ubc1b\ub3c4\ub85d \ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\n        \"\"\"\n        new_car = self.Car5(\"SuperCar\")\n    \n        # \uc774\uc81c\ub294 \uc775\uc219\ud574\uc9c0\uc168\uaca0\uc9c0\ub9cc `_name` \uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4!\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == \"SuperCar\"\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'SuperCar'\nE         - SuperCar\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:208: AssertionError"}, "teardown": {"duration": 0.00028989999999984306, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_init_args", "lineno": 209, "outcome": "failed", "keywords": ["test_about_init_args", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py", "PythonClasses"], "setup": {"duration": 0.0003694000000000752, "outcome": "passed"}, "call": {"duration": 0.00028889999999992533, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 224, "message": "TypeError: assertRaises() arg 1 must be an exception type or tuple of exception types"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 224, "message": "TypeError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_init_args>\n\n    def test_about_init_args(self):\n        \"\"\"\n        \uc624\ub958\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        Car5 \uc758 \uc0dd\uc131\uc790 \ud568\uc218\uc5d0\uc11c \ubc1b\uc544\uc57c \ud558\ub294 \uac12\uc744 \uc8fc\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub294 \uc5b4\ub5a4 \uc5d0\ub7ec\uac00\n        \ubc1c\uc0dd\ud558\ub098\uc694?\n    \n        \uc544\ub798 \ucf54\ub4dc\uc5d0 \ud574\ub2f9 \uc624\ub958, \uc608\uc678 \ud074\ub798\uc2a4\ub97c \uc368\uc8fc\uc2dc\uba74 \ub429\ub2c8\ub2e4.\n    \n        \uc608\ub97c \ub4e4\uc5b4 \ud30c\uc774\uc36c\uc5d0\uc11c \ubcf4\uc168\uc744\ub9cc\ud55c \uc608\uc678 \ud074\ub798\uc2a4\ub294 `TypeError`,\n        `IndentationError` \ub4f1 \ub2e4\uc591\ud569\ub2c8\ub2e4.\n    \n        \uc544\ub798 \ucf54\ub4dc\uc5d0\uc11c `self.Car5()` \ub97c \uc2e4\ud589\ud558\uba74 \uc5b4\ub5a4 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud560\uae4c\uc694?\n        \"\"\"\n>       with self.assertRaises(\"\uc608\uc678 \ud074\ub798\uc2a4\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694\"):\nE       TypeError: assertRaises() arg 1 must be an exception type or tuple of exception types\n\nsrc\\Part_2.py:224: TypeError"}, "teardown": {"duration": 0.00029849999999997934, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_init_constructor", "lineno": 64, "outcome": "failed", "keywords": ["tests/Part_2/__init__.py", "test_about_init_constructor", "ds-sa-pyfriend", "Part_2.py", "PythonClasses"], "setup": {"duration": 0.0003807000000000116, "outcome": "passed"}, "call": {"duration": 0.0004211000000000631, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 75, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'BatCar'\n  - BatCar\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 75, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_init_constructor>\n\n    def test_about_init_constructor(self):\n        \"\"\"\n        'underbar' \ub77c\uace0 \ubd88\ub9ac\ub294 \ubc11\uc904 (_) \uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \ud30c\uc774\uc36c\uc5d0\uc11c\ub294 \uc774\ub7ec\ud55c \ubc11\uc904\uc758 \uc758\ubbf8\uac00 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?\n    \n        \ud074\ub798\uc2a4\uc5d0\uc11c\ub294 \uc774 \ubc11\uc904\uc744 \uc0ac\uc6a9\ud558\ub294 \uc6a9\ub3c4\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n        \ubb3c\ub860 \uaddc\uce59\ucc98\ub7fc \uc815\ud574\uc9c0\uc9c0\ub294 \uc54a\uc558\uc9c0\ub9cc \ud558\ub098\uc758 \uc554\ubb35\uc801\uc778 convention \uc785\ub2c8\ub2e4.\n        \"\"\"\n        new_car = self.Car2()\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_car._name\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'BatCar'\nE         - BatCar\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:75: AssertionError"}, "teardown": {"duration": 0.0002580000000000915, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_instance_creation", "lineno": 31, "outcome": "failed", "keywords": ["tests/Part_2/__init__.py", "test_about_instance_creation", "Part_2.py", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.0003580000000000805, "outcome": "passed"}, "call": {"duration": 0.0003979000000000621, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 42, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Car'\n  - Car\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 42, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_instance_creation>\n\n    def test_about_instance_creation(self):\n        \"\"\"\n        `new_car` \ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4.\n    \n        \uc774\ub807\uac8c \uc0dd\uc131\ub41c \uc778\uc2a4\ud134\uc2a4\uc5d0\ub294 \uae30\ubcf8\uc73c\ub85c \uba87\uac00\uc9c0 \uc18d\uc131\ub4e4\uc774 \uc0dd\uaca8\ub0a9\ub2c8\ub2e4.\n        \uc774 \uc911\uc5d0\uc11c `__name__` \uc5b4\ub5a4 \uc18d\uc131\uc778\uc9c0 \uc54c\uc544\ubcf4\uc138\uc694\n    \n        # NOTE: .__name__ \uc18d\uc131\uc740 \ud074\ub798\uc2a4\ub97c \ubb38\uc790\uc5f4\ub85c \ub9cc\ub4ed\ub2c8\ub2e4.\n        \"\"\"\n        new_car = self.Car()\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_car.__class__.__name__\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Car'\nE         - Car\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:42: AssertionError"}, "teardown": {"duration": 0.0002505999999999897, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_instance_variables", "lineno": 226, "outcome": "failed", "keywords": ["test_about_instance_variables", "tests/Part_2/__init__.py", "Part_2.py", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.00029849999999997934, "outcome": "passed"}, "call": {"duration": 0.0004345999999999517, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 240, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is ('SuperCar' == 'RobinCar'\n  - RobinCar\n  + SuperCar)"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 240, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_instance_variables>\n\n    def test_about_instance_variables(self):\n        \"\"\"\n        \ud558\ub098\uc758 \uc778\uc2a4\ud134\uc2a4\ub9c8\ub2e4 \uc800\ub9c8\ub2e4\uc758 \uac12\ub4e4\uc744 \uc800\uc7a5\ud574 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n    \n        \uc544\ub798 \ucf54\ub4dc\uc5d0\uc11c\ub294 \ub450 \uac1c\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\n    \n        \uc11c\ub85c\uac00 \uc601\ud5a5\uc744 \uc904\uae4c\uc694?\n    \n        \uc9c1\uc811 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uc5b4\ubcf4\uba74\uc11c \uc2e4\ud5d8\ud574 \ubcf4\uc138\uc694!\n        \"\"\"\n        old_car = self.Car5(\"SuperCar\")\n        new_car = self.Car5(\"RobinCar\")\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is (old_car.name == new_car.name)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is ('SuperCar' == 'RobinCar'\nE         - RobinCar\nE         + SuperCar)\n\nsrc\\Part_2.py:240: AssertionError"}, "teardown": {"duration": 0.00022319999999997897, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_objects_str_and_repr", "lineno": 304, "outcome": "failed", "keywords": ["test_about_objects_str_and_repr", "tests/Part_2/__init__.py", "Part_2.py", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.00028949999999983156, "outcome": "passed"}, "call": {"duration": 0.0003817999999999877, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 314, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == '[1, 2, 3]'\n  - [1, 2, 3]\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 314, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_objects_str_and_repr>\n\n    def test_about_objects_str_and_repr(self):\n        \"\"\"\n        \uc774\ubc88\uc5d0\ub294 \ub2e4\ub978 \uac1d\uccb4\ub4e4\uc758 `__str__` \uacfc `__repr__` \ud568\uc218\ub4e4\uc5d0 \ub300\ud574\uc11c\n        \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \uc5b4\ub5a4 \uacb0\uacfc\ub4e4\uc774 \ub4f1\uc7a5\ud558\ub098\uc694?\n        \"\"\"\n        nums=[1, 2, 3]\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == str(nums)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == '[1, 2, 3]'\nE         - [1, 2, 3]\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:314: AssertionError"}, "teardown": {"duration": 0.00022619999999995422, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_private_attributes", "lineno": 76, "outcome": "failed", "keywords": ["tests/Part_2/__init__.py", "test_about_private_attributes", "Part_2.py", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.0002737000000001544, "outcome": "passed"}, "call": {"duration": 0.000374400000000108, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 85, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'SuperCar'\n  - SuperCar\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 85, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_private_attributes>\n\n    def test_about_private_attributes(self):\n        \"\"\"\n        _ \uc740 \ud30c\uc774\uc36c\uc5d0\uc11c private \uc744 \ub73b\ud558\uc9c0\ub9cc \ub3d9\uc791\uc740 \uc5b4\ub5a8\uae4c\uc694?\n    \n        \ubc11\uc904\uc774 \uc5c6\ub294 \ucf54\ub4dc\uc640 \ub2e4\ub974\uac8c \uc791\ub3d9\ud560\uae4c\uc694?\n        \"\"\"\n        new_car = self.Car2()\n        new_car.set_name(\"SuperCar\")\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_car._name\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'SuperCar'\nE         - SuperCar\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:85: AssertionError"}, "teardown": {"duration": 0.00029360000000000497, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_repr_method", "lineno": 290, "outcome": "failed", "keywords": ["test_about_repr_method", "tests/Part_2/__init__.py", "Part_2.py", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.0002924000000001925, "outcome": "passed"}, "call": {"duration": 0.00025399999999997647, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 302, "message": "TypeError: __repr__ returned non-string (type NoneType)"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 302, "message": "TypeError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_repr_method>\n\n    def test_about_repr_method(self):\n        \"\"\"\n        \uc774\ubc88\uc5d0\ub294 `__repr__` \ud568\uc218\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \uc774 \ud2b9\ubcc4\ud55c \ud568\uc218\ub294 \uc5b8\uc81c \uc0ac\uc6a9\uc774 \ub420\uae4c\uc694?\n        \ub610\ud55c `__str__` \uacfc `__repr__` \uc758 \ucc28\uc774\ub294 \ubb54\uac00\uc694?\n        \"\"\"\n        batcar = self.Car6(\"BatCar\")\n        supercar = self.Car6(\"SuperCar\")\n    \n        # Car6 \uc758 __repr__ \ub97c \uc644\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.\n>       assert repr(batcar) == \"<Car 'BatCar'>\"\nE       TypeError: __repr__ returned non-string (type NoneType)\n\nsrc\\Part_2.py:302: TypeError"}, "teardown": {"duration": 0.00027559999999993146, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_self_reference", "lineno": 262, "outcome": "failed", "keywords": ["test_about_self_reference", "tests/Part_2/__init__.py", "Part_2.py", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.0004010000000000957, "outcome": "passed"}, "call": {"duration": 0.0004755000000000731, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 273, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == <[TypeError('...0x24d03828160>\n  (pytest_assertion plugin: representation of details failed: C:\\Users\\Coke\\anaconda3\\envs\\s2n1\\lib\\site-packages\\_pytest\\assertion\\util.py:251: TypeError: __repr__ returned non-string (type NoneType).\n   Probably an object has a faulty __repr__.)"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 273, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_self_reference>\n\n    def test_about_self_reference(self):\n        \"\"\"\n        \ud074\ub798\uc2a4\uc5d0\uc11c `self` \ub77c\ub294 \uac83\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \uc704 \ucf54\ub4dc\uc5d0\uc11c `get_self()` \ud568\uc218\ub294 `self` \ub97c \ub9ac\ud134\ud569\ub2c8\ub2e4.\n    \n        \uc5ec\uae30\uc5d0\uc11c `self` \ub780 \uc5b4\ub5a4 \uac83\uc77c\uae4c\uc694?\n        \"\"\"\n        new_car = self.Car6(\"SuperCar\")\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_car.get_self() # string \uc774 \uc544\ub2d9\ub2c8\ub2e4!\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == <[TypeError('...0x24d03828160>\nE         (pytest_assertion plugin: representation of details failed: C:\\Users\\Coke\\anaconda3\\envs\\s2n1\\lib\\site-packages\\_pytest\\assertion\\util.py:251: TypeError: __repr__ returned non-string (type NoneType).\nE          Probably an object has a faulty __repr__.)\n\nsrc\\Part_2.py:273: AssertionError"}, "teardown": {"duration": 0.00032420000000010774, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClasses::test_about_str_method", "lineno": 274, "outcome": "failed", "keywords": ["tests/Part_2/__init__.py", "Part_2.py", "test_about_str_method", "ds-sa-pyfriend", "PythonClasses"], "setup": {"duration": 0.00037829999999994257, "outcome": "passed"}, "call": {"duration": 0.00027250000000011987, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 288, "message": "TypeError: __str__ returned non-string (type NoneType)"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 288, "message": "TypeError"}], "longrepr": "self = <src.Part_2.PythonClasses testMethod=test_about_str_method>\n\n    def test_about_str_method(self):\n        \"\"\"\n        `str()` \ud568\uc218\ub97c \uc368\ubcf4\uc2e0 \uc801\uc774 \uc788\uc73c\uc2e0\uac00\uc694?\n    \n        \ubb38\uc790\uc5f4\ub85c \ubc14\uafd4\uc8fc\uae30\ub3c4 \ud558\uc9c0\ub9cc `__str__` \uc744 \ud1b5\ud574\uc11c \ud574\ub2f9 \ud568\uc218\ub97c \ub36e\uc5b4\uc4f8 \uc218\n        \uc788\uc2b5\ub2c8\ub2e4.\n    \n        \uc774\ub807\uac8c \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uac8c \ub418\uba74 \ubb38\uc790\uc5f4\ub85c \ubcc0\uacbd\ud574\uc8fc\ub294 \ud568\uc218\ub3c4 \uc870\uc791\ud560 \uc218\n        \uc788\uc2b5\ub2c8\ub2e4.\n        \"\"\"\n        new_car=self.Car6(\"SuperCar\")\n    \n        # Car6 \uc758 __str__ \ub97c \uc644\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.\n>       assert str(new_car) == \"This car is SuperCar\"\nE       TypeError: __str__ returned non-string (type NoneType)\n\nsrc\\Part_2.py:288: TypeError"}, "teardown": {"duration": 0.0004300999999999888, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_class_and_objects", "lineno": 345, "outcome": "failed", "keywords": ["PythonClassAttributes", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py", "test_about_class_and_objects"], "setup": {"duration": 0.0004634000000001137, "outcome": "passed"}, "call": {"duration": 0.00043280000000001095, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 352, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = issubclass(<class 'src.Part_2.PythonClassAttributes.Car'>, object)\n +    where <class 'src.Part_2.PythonClassAttributes.Car'> = <src.Part_2.PythonClassAttributes testMethod=test_about_class_and_objects>.Car"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 352, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClassAttributes testMethod=test_about_class_and_objects>\n\n    def test_about_class_and_objects(self):\n        \"\"\"\n        `issubclass` \uc5d0\uc11c subclass \ub780 \ubb34\uc5c7\uc744 \uc758\ubbf8\ud560\uae4c\uc694?\n    \n        \ud30c\uc774\uc36c\uc740 \ud074\ub798\uc2a4\uc5d0\uc11c \ub2e4\ub978 \ud074\ub798\uc2a4\uac00 \ud30c\uc0dd\ub41c \uacbd\uc6b0\uac00 \uc788\uc744\uae4c\uc694?\n        \"\"\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is (issubclass(self.Car, object))\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = issubclass(<class 'src.Part_2.PythonClassAttributes.Car'>, object)\nE        +    where <class 'src.Part_2.PythonClassAttributes.Car'> = <src.Part_2.PythonClassAttributes testMethod=test_about_class_and_objects>.Car\n\nsrc\\Part_2.py:352: AssertionError"}, "teardown": {"duration": 0.00030079999999998996, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_class_and_types", "lineno": 338, "outcome": "failed", "keywords": ["PythonClassAttributes", "test_about_class_and_types", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0003187000000000051, "outcome": "passed"}, "call": {"duration": 0.00040640000000014, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 344, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is (<class 'type'> == <class 'type'>\n  +<class 'type'>\n  -<class 'type'>)"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 344, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClassAttributes testMethod=test_about_class_and_types>\n\n    def test_about_class_and_types(self):\n        \"\"\"\n        `__class__` \ub294 \ud30c\uc774\uc36c\uc5d0\uc11c \ud2b9\uc815 \uac1d\uccb4\uc758 \ud074\ub798\uc2a4\ub97c \ud30c\uc545\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\uc774\n        \ub429\ub2c8\ub2e4.\n        \"\"\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is (self.Car.__class__ == type)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is (<class 'type'> == <class 'type'>\nE         +<class 'type'>\nE         -<class 'type'>)\n\nsrc\\Part_2.py:344: AssertionError"}, "teardown": {"duration": 0.00023410000000012587, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_class_methods", "lineno": 365, "outcome": "failed", "keywords": ["test_about_class_methods", "PythonClassAttributes", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.000367200000000123, "outcome": "passed"}, "call": {"duration": 0.0005226000000000397, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 367, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 26\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -26"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 367, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClassAttributes testMethod=test_about_class_methods>\n\n    def test_about_class_methods(self):\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == len(dir(self.Car))\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 26\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -26\n\nsrc\\Part_2.py:367: AssertionError"}, "teardown": {"duration": 0.00029930000000000234, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_individual_object_attributes", "lineno": 368, "outcome": "failed", "keywords": ["PythonClassAttributes", "test_about_individual_object_attributes", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0003340000000000565, "outcome": "passed"}, "call": {"duration": 0.0003419000000000061, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 373, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 4\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -4"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 373, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClassAttributes testMethod=test_about_individual_object_attributes>\n\n    def test_about_individual_object_attributes(self):\n        new_car=self.Car()\n        new_car.wheels=4\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_car.wheels\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 4\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -4\n\nsrc\\Part_2.py:373: AssertionError"}, "teardown": {"duration": 0.00023499999999998522, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_individual_object_functions_1", "lineno": 374, "outcome": "failed", "keywords": ["PythonClassAttributes", "tests/Part_2/__init__.py", "test_about_individual_object_functions_1", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0002950999999999926, "outcome": "passed"}, "call": {"duration": 0.0005302000000000362, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 379, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'driving car'\n  - driving car\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 379, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClassAttributes testMethod=test_about_individual_object_functions_1>\n\n    def test_about_individual_object_functions_1(self):\n        new_car=self.Car()\n        new_car.drive=lambda: 'driving car'\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_car.drive()\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'driving car'\nE         - driving car\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:379: AssertionError"}, "teardown": {"duration": 0.00024500000000005073, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_individual_object_functions_2", "lineno": 380, "outcome": "failed", "keywords": ["PythonClassAttributes", "tests/Part_2/__init__.py", "test_about_individual_object_functions_2", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.00027359999999987394, "outcome": "passed"}, "call": {"duration": 0.00025989999999986857, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 389, "message": "TypeError: assertRaises() arg 1 must be an exception type or tuple of exception types"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 389, "message": "TypeError"}], "longrepr": "self = <src.Part_2.PythonClassAttributes testMethod=test_about_individual_object_functions_2>\n\n    def test_about_individual_object_functions_2(self):\n        old_car = self.Car()\n        new_car = self.Car()\n    \n        def drive():\n            return 'driving car'\n        old_car.drive = drive\n    \n>       with self.assertRaises(\"\uc608\uc678 \ud074\ub798\uc2a4\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694\"):\nE       TypeError: assertRaises() arg 1 must be an exception type or tuple of exception types\n\nsrc\\Part_2.py:389: TypeError"}, "teardown": {"duration": 0.000247200000000003, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_object_methods", "lineno": 353, "outcome": "failed", "keywords": ["test_about_object_methods", "PythonClassAttributes", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.00028340000000004473, "outcome": "passed"}, "call": {"duration": 0.0003699000000001451, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 364, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 26\n  +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\n  -26"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 364, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClassAttributes testMethod=test_about_object_methods>\n\n    def test_about_object_methods(self):\n        \"\"\"\n        \ud30c\uc774\uc36c\uc5d0\uc11c `dir()` \ud568\uc218\ub294 \ud2b9\uc815 \uac1d\uccb4\uc758 \uba54\uc18c\ub4dc\ub4e4\uc744 \ud30c\uc545\ud560 \ub54c \uc720\uc6a9\ud569\ub2c8\ub2e4.\n    \n        \uc544\ub798 \ucf54\ub4dc\ucc98\ub7fc \ud574\ub2f9 \ud568\uc218\uc5d0 \uc778\uc218\ub97c \ub118\uaca8\uc918\ub3c4 \ub418\uc9c0\ub9cc \uc548 \ub118\uaca8\uc918\ub3c4 \uc2e4\ud589\uc740\n        \ub429\ub2c8\ub2e4.\n    \n        \uadf8\ub0e5 \uc2e4\ud589\ud560 \ub54c\uc5d0\ub294 \uc5b4\ub5a4 \uacb0\uacfc\uac00 \ubcf4\uc774\ub098\uc694?\n        \"\"\"\n        new_car=self.Car()\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == len(dir(new_car))\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 26\nE         +'\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694'\nE         -26\n\nsrc\\Part_2.py:364: AssertionError"}, "teardown": {"duration": 0.0003253999999999202, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonClassAttributes::test_about_objects", "lineno": 329, "outcome": "failed", "keywords": ["test_about_objects", "PythonClassAttributes", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0003124000000001015, "outcome": "passed"}, "call": {"duration": 0.0003395000000001591, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 337, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = isinstance(<src.Part_2.PythonClassAttributes.Car object at 0x0000024D038516A0>, object)"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 337, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonClassAttributes testMethod=test_about_objects>\n\n    def test_about_objects(self):\n        \"\"\"\n        \ud074\ub798\uc2a4\ub294 \uadf8\ub807\ub2e4\uba74 \uc5b4\ub514\uc11c\ubd80\ud130 \uc0dd\uc131\uc774 \ub420\uae4c\uc694?\n    \n        \ud30c\uc774\uc36c\uc5d0\uc11c object \ub294 \uc5b4\ub5a4 \ud074\ub798\uc2a4\uc778\uac00\uc694?\n        \"\"\"\n        new_car = self.Car()\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is isinstance(new_car, object)\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = isinstance(<src.Part_2.PythonClassAttributes.Car object at 0x0000024D038516A0>, object)\n\nsrc\\Part_2.py:337: AssertionError"}, "teardown": {"duration": 0.0003897999999999957, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_behavior_inheritance", "lineno": 440, "outcome": "failed", "keywords": ["tests/Part_2/__init__.py", "PythonInheritance", "ds-sa-pyfriend", "Part_2.py", "test_about_behavior_inheritance"], "setup": {"duration": 0.0004267000000000021, "outcome": "passed"}, "call": {"duration": 0.0004185999999999357, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 443, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Optimoose'\n  - Optimoose\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 443, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonInheritance testMethod=test_about_behavior_inheritance>\n\n    def test_about_behavior_inheritance(self):\n        new_truck = self.Truck(\"Optimoose\")\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_truck.name\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Optimoose'\nE         - Optimoose\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:443: AssertionError"}, "teardown": {"duration": 0.00022769999999994184, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_explicit_init_call", "lineno": 524, "outcome": "failed", "keywords": ["test_about_explicit_init_call", "tests/Part_2/__init__.py", "PythonInheritance", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0002826000000000217, "outcome": "passed"}, "call": {"duration": 0.0003815000000000346, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 532, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Icecube'\n  - Icecube\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 532, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonInheritance testMethod=test_about_explicit_init_call>\n\n    def test_about_explicit_init_call(self):\n        \"\"\"\n        subclass \uc5d0\uc11c `super` \ud568\uc218\ub97c \ud638\ucd9c\ud55c\ub2e4\uace0 \ud558\uba74 \ub2ec\ub77c\uc9c8\uae4c\uc694?\n    \n        superclass \uc758 \uc0dd\uc131\uc790 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uba74 \ubb38\uc81c\uac00 \uc0ac\ub77c\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n        \"\"\"\n        new_coldwheels = self.Coldwheels(\"Icecube\")\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_coldwheels.name\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'Icecube'\nE         - Icecube\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:532: AssertionError"}, "teardown": {"duration": 0.00029149999999988907, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_init_is_not_automatic", "lineno": 506, "outcome": "failed", "keywords": ["tests/Part_2/__init__.py", "test_about_init_is_not_automatic", "PythonInheritance", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0003401999999999017, "outcome": "passed"}, "call": {"duration": 0.0002550999999999526, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 522, "message": "TypeError: assertRaises() arg 1 must be an exception type or tuple of exception types"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 522, "message": "TypeError"}], "longrepr": "self = <src.Part_2.PythonInheritance testMethod=test_about_init_is_not_automatic>\n\n    def test_about_init_is_not_automatic(self):\n        \"\"\"\n        \ud074\ub798\uc2a4\ub97c \ub2e4\ub8f0 \ub54c \uc0dd\uc131\uc790 \ud568\uc218\uac00 \ubc1b\ub294 \ud30c\ub77c\ubbf8\ud130 \uac12\ub4e4\uc774 \uc800\uc808\ub85c \ud074\ub798\uc2a4\n        \uc18d\uc131\uc73c\ub85c \ubcc0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n    \n        \uc9c1\uc811 \uc9c0\uc815\uc744 \ud574\uc918\uc57c \ud569\ub2c8\ub2e4.\n    \n        \uc704 \ucf54\ub4dc\uc5d0\uc11c\ub294 `CoolCar` \uc774\ub098 `Coldwheels` \ud074\ub798\uc2a4\uc5d0\uc11c\ub294 \ub530\ub85c `name` \uc774\ub77c\ub294\n        \ud30c\ub77c\ubbf8\ud130\uc5d0 \ub300\ud55c \uc870\uce58\ub97c \ud558\uc9c0 \uc54a\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc0c1\ud669\uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4\ub97c\n        \uc0dd\uc131\ud558\uac8c \ub418\uba74 \uacfc\uc5f0 `name` \uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc744\uae4c\uc694?\n    \n        \ub610\ud55c \uc5c6\ub294 \uc18d\uc131\uc744 \uc811\uadfc\ud558\uac8c \ub418\uba74 \uc5b4\ub5a4 \uc624\ub958\uac00 \ub098\ub294\uc9c0 \uc608\uc678 \ud074\ub798\uc2a4\ub97c\n        \uc801\uc5b4\uc8fc\uc138\uc694!\n        \"\"\"\n        new_coolcar = self.CoolCar(\"Ice Car\")\n>       with self.assertRaises(\"\uc608\uc678 \ud074\ub798\uc2a4\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694\"):\nE       TypeError: assertRaises() arg 1 must be an exception type or tuple of exception types\n\nsrc\\Part_2.py:522: TypeError"}, "teardown": {"duration": 0.00024409999999996934, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_python3_object_class", "lineno": 437, "outcome": "failed", "keywords": ["test_about_python3_object_class", "tests/Part_2/__init__.py", "PythonInheritance", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.00027150000000020214, "outcome": "passed"}, "call": {"duration": 0.0003287000000000706, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 439, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = issubclass(<class 'src.Part_2.PythonInheritance.Truck'>, object)\n +    where <class 'src.Part_2.PythonInheritance.Truck'> = <src.Part_2.PythonInheritance testMethod=test_about_python3_object_class>.Truck"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 439, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonInheritance testMethod=test_about_python3_object_class>\n\n    def test_about_python3_object_class(self):\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is (issubclass(self.Truck, object))\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = issubclass(<class 'src.Part_2.PythonInheritance.Truck'>, object)\nE        +    where <class 'src.Part_2.PythonInheritance.Truck'> = <src.Part_2.PythonInheritance testMethod=test_about_python3_object_class>.Truck\n\nsrc\\Part_2.py:439: AssertionError"}, "teardown": {"duration": 0.00022969999999999935, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_subclass_ancestors", "lineno": 425, "outcome": "failed", "keywords": ["tests/Part_2/__init__.py", "PythonInheritance", "ds-sa-pyfriend", "Part_2.py", "test_about_subclass_ancestors"], "setup": {"duration": 0.00028500000000009074, "outcome": "passed"}, "call": {"duration": 0.00046680000000010047, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 436, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\n +  where True = issubclass(<class 'src.Part_2.PythonInheritance.Truck'>, <class 'src.Part_2.PythonInheritance.Car'>)\n +    where <class 'src.Part_2.PythonInheritance.Truck'> = <src.Part_2.PythonInheritance testMethod=test_about_subclass_ancestors>.Truck\n +    and   <class 'src.Part_2.PythonInheritance.Car'> = <src.Part_2.PythonInheritance testMethod=test_about_subclass_ancestors>.Car"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 436, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonInheritance testMethod=test_about_subclass_ancestors>\n\n    def test_about_subclass_ancestors(self):\n        \"\"\"\n        `issubclass` \ud568\uc218\uc5d0 \ub300\ud574\uc11c \ub354 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n    \n        \uc790\uc2dd \ud074\ub798\uc2a4\ub294 subclass \ub77c\uace0\ub3c4 \ud569\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ubd80\ubaa8 \ud074\ub798\uc2a4\ub294 superclass\n        \ub77c\uace0\ub3c4 \ud558\uc8e0.\n    \n        \uc774\ub7ec\ud55c \uad00\uacc4\uac00 \uc788\uae30 \ub54c\ubb38\uc5d0 \ud574\ub2f9 \ud568\uc218\ub85c \ud074\ub798\uc2a4\ub4e4 \uac04\uc5d0 \uad00\uacc4\ub97c \ud30c\uc545\ud560 \uc218\n        \uc788\uc2b5\ub2c8\ub2e4.\n        \"\"\"\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" is (issubclass(self.Truck, self.Car))\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' is True\nE        +  where True = issubclass(<class 'src.Part_2.PythonInheritance.Truck'>, <class 'src.Part_2.PythonInheritance.Car'>)\nE        +    where <class 'src.Part_2.PythonInheritance.Truck'> = <src.Part_2.PythonInheritance testMethod=test_about_subclass_ancestors>.Truck\nE        +    and   <class 'src.Part_2.PythonInheritance.Car'> = <src.Part_2.PythonInheritance testMethod=test_about_subclass_ancestors>.Car\n\nsrc\\Part_2.py:436: AssertionError"}, "teardown": {"duration": 0.0002468999999998278, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_subclass_behavior_modification", "lineno": 457, "outcome": "failed", "keywords": ["tests/Part_2/__init__.py", "PythonInheritance", "ds-sa-pyfriend", "Part_2.py", "test_about_subclass_behavior_modification"], "setup": {"duration": 0.0002946999999999811, "outcome": "passed"}, "call": {"duration": 0.00040360000000005947, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 466, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'beep beep'\n  - beep beep\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 466, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonInheritance testMethod=test_about_subclass_behavior_modification>\n\n    def test_about_subclass_behavior_modification(self):\n        \"\"\"\n        \uae30\uc874\uc5d0 superclass \uc5d0 \uc815\uc758\ub41c \uba54\uc18c\ub4dc\ub97c subclass \uc5d0\uc11c \ub2e4\uc2dc \uc7ac\uc815\uc758\ub97c \ud558\uac8c\n        \ub418\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694?\n    \n        \uc5b4\ub5a4 \uacb0\uacfc\uac00 \uc788\uc744\uc9c0 \uc9c1\uc811 \ud655\uc778\ud574\ubcf4\uc2dc\uace0 \ud14c\uc2a4\ud2b8\ub97c \ud1b5\uacfc\ud558\uc138\uc694!\n        \"\"\"\n        new_truck = self.Truck(\"Optimoose\")\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_truck.honk()\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'beep beep'\nE         - beep beep\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:466: AssertionError"}, "teardown": {"duration": 0.0002477999999999092, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_subclass_new_behaviors", "lineno": 444, "outcome": "failed", "keywords": ["test_about_subclass_new_behaviors", "tests/Part_2/__init__.py", "PythonInheritance", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.00030639999999992895, "outcome": "passed"}, "call": {"duration": 0.00039520000000003996, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 452, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'vroom'\n  - vroom\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 452, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonInheritance testMethod=test_about_subclass_new_behaviors>\n\n    def test_about_subclass_new_behaviors(self):\n        \"\"\"\n        subclass \uc5d0\ub9cc \uc788\ub294 \uba54\uc18c\ub4dc\ub97c superclass \uc5d0\uc11c \uc2e4\ud589\ud558\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694?\n    \n        \uc5b4\ub5a4 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\ub294\uc9c0 \ud655\uc778\ud558\uace0 \ud574\ub2f9 \uc608\uc678 \ud074\ub798\uc2a4\ub97c \uc801\uc5b4\uc8fc\uc138\uc694!\n        \"\"\"\n        new_truck = self.Truck(\"Optimoose\")\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_truck.drive()\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'vroom'\nE         - vroom\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:452: AssertionError"}, "teardown": {"duration": 0.00033759999999993795, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_about_super", "lineno": 477, "outcome": "failed", "keywords": ["test_about_super", "tests/Part_2/__init__.py", "PythonInheritance", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0003261999999999432, "outcome": "passed"}, "call": {"duration": 0.0005084999999998008, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 485, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'beep, BEEP!'\n  - beep, BEEP!\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 485, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonInheritance testMethod=test_about_super>\n\n    def test_about_super(self):\n        \"\"\"\n        \ub54c\ub85c\ub294 superclass \uc5d0 \uc788\ub294 \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uace0 \uc2f6\uc744 \ub54c\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n    \n        subclass \uc5d0\uc11c \ud574\ub2f9 \uba54\uc18c\ub4dc\ub97c \ub36e\uc5b4 \uc37c\ub354\ub77c\ub3c4 \ubd88\ub7ec\uc624\ub294 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4.\n        \"\"\"\n        new_racecar = self.Racecar(\"F1\")\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_racecar.honk()\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'beep, BEEP!'\nE         - beep, BEEP!\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:485: AssertionError"}, "teardown": {"duration": 0.0002546999999999411, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonInheritance::test_super_works_across_methods", "lineno": 492, "outcome": "failed", "keywords": ["PythonInheritance", "tests/Part_2/__init__.py", "test_super_works_across_methods", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.00040200000000001346, "outcome": "passed"}, "call": {"duration": 0.0004052999999999418, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 495, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'beep, BEEP BEEP!'\n  - beep, BEEP BEEP!\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 495, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonInheritance testMethod=test_super_works_across_methods>\n\n    def test_super_works_across_methods(self):\n        new_loudcar = self.LoudCar(\"TooLoud\")\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == new_loudcar.honk()\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'beep, BEEP BEEP!'\nE         - beep, BEEP BEEP!\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:495: AssertionError"}, "teardown": {"duration": 0.00038589999999993907, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions::test_about_else_clause", "lineno": 613, "outcome": "failed", "keywords": ["PythonExceptions", "test_about_else_clause", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0004456999999999933, "outcome": "passed"}, "call": {"duration": 0.0004840999999999873, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 631, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'else clause'\n  - else clause\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 631, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonExceptions testMethod=test_about_else_clause>\n\n    def test_about_else_clause(self):\n        \"\"\"\n        try... except \ub294 \uc0ac\uc2e4 if \uc870\uac74\ubb38\ucc98\ub7fc else \ub77c\ub294 \uad6c\ubb38\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\n    \n        \uc989, try... except... else \ub3c4 \uc2e4\ud589\ud560 \uc218\uac00 \uc788\uc8e0.\n    \n        \ub9c8\uce58 if... elif... else \uc640\ub3c4 \ube44\uc2b7\ud569\ub2c8\ub2e4.\n        \"\"\"\n        result=None\n        try:\n            pass\n        except RuntimeError:\n            result='exception clause'\n            pass\n        else:\n            result='else clause'\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == result\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'else clause'\nE         - else clause\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:631: AssertionError"}, "teardown": {"duration": 0.00023200000000000998, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions::test_about_exception_inheritance", "lineno": 551, "outcome": "failed", "keywords": ["test_about_exception_inheritance", "PythonExceptions", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0002950999999999926, "outcome": "passed"}, "call": {"duration": 0.0004953000000000873, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 562, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'RuntimeError'\n  - RuntimeError\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 562, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonExceptions testMethod=test_about_exception_inheritance>\n\n    def test_about_exception_inheritance(self):\n        \"\"\"\n        \uc5ec\uae30\uc5d0\uc11c \ub098\uc624\ub294 `mro` \uc5d0 \ub300\ud574\uc11c\ub294 \uc790\uc138\ud788 \uc544\uc2e4 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.\n    \n        \ub2e4\ub9cc \ud574\ub2f9 \ud14c\uc2a4\ud2b8\ub97c \ud1b5\uacfc\ud558\uba74\uc11c \uc5b4\ub5a4 \uac83\ub4e4\uc774 \ub098\uc624\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uc2dc\uba74 \ub420 \uac83\n        \uac19\uc2b5\ub2c8\ub2e4.\n    \n        \uc9c1\uc811 \ud30c\uc774\uc36c\uc73c\ub85c \ud655\uc778\ud574 \ubcf4\uc2dc\uba74\uc11c \ud14c\uc2a4\ud2b8\ub97c \ud1b5\uacfc\ud574\uc8fc\uc138\uc694\n        \"\"\"\n        mro = self.CustomError.mro()\n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == mro[1].__name__\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'RuntimeError'\nE         - RuntimeError\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:562: AssertionError"}, "teardown": {"duration": 0.0002476000000000145, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions::test_about_finally_clause", "lineno": 632, "outcome": "failed", "keywords": ["PythonExceptions", "test_about_finally_clause", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0002728999999999093, "outcome": "passed"}, "call": {"duration": 0.00038999999999989043, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 650, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'always run'\n  - always run\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 650, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonExceptions testMethod=test_about_finally_clause>\n\n    def test_about_finally_clause(self):\n        \"\"\"\n        finally \ub294 else \uc640\ub294 \ub610 \ub2e4\ub985\ub2c8\ub2e4.\n    \n        \ucd5c\uc885\uc801\uc73c\ub85c \uc2e4\ud589\uc774 \ub418\uae30 \ub54c\ubb38\uc774\uc8e0. \uc989, \uc5b4\ub5a0\ud55c \uacbd\uc6b0\uc5d0\ub3c4 \uc2e4\ud589\uc774 \ub418\ub294 \ucf54\ub4dc\ub97c\n        \ub2f4\uc744 \uc218 \uc788\ub294 \uacf3\uc785\ub2c8\ub2e4.\n        \"\"\"\n        result=None\n        try:\n            result = 'new result'\n            self.fail(\"Oops\")\n        except:\n            result = 'other result'\n            pass\n        finally:\n            result='always run'\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == result\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'always run'\nE         - always run\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:650: AssertionError"}, "teardown": {"duration": 0.00022689999999991883, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions::test_about_raising_specific_error", "lineno": 594, "outcome": "failed", "keywords": ["PythonExceptions", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py", "test_about_raising_specific_error"], "setup": {"duration": 0.00027890000000008186, "outcome": "passed"}, "call": {"duration": 0.00037210000000009735, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 611, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'exception handling'\n  - exception handling\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 611, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonExceptions testMethod=test_about_raising_specific_error>\n\n    def test_about_raising_specific_error(self):\n        \"\"\"\n        \uc5d0\ub7ec\uac00 \uba3c\uc800 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0\ub3c4 \uc788\uc9c0\ub9cc \uc5b4\ub290 \uacbd\uc6b0\uc5d0\ub294 \ucf54\ub4dc\uc5d0\uc11c \uc5d0\ub7ec\ub97c\n        \ubc1c\uc0dd\uc2dc\ud0a4\ub294 \uacbd\uc6b0\ub3c4 \uc874\uc7ac\ud569\ub2c8\ub2e4.\n    \n        \uadf8\ub807\ub2e4\uba74 \uc774\ub7ec\ud55c \uc5d0\ub7ec, \uc608\uc678\ub97c \ubc1c\uc0dd\ud558\uae30 \uc704\ud55c `raise` \uc5d0 \ub300\ud574\uc11c\n        \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n        \"\"\"\n        result=None\n    \n        try:\n            raise self.CustomError(\"Custom Message\")\n        except self.CustomError as e:\n            result='exception handling'\n            msg=e.args[0]\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == result\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'exception handling'\nE         - exception handling\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:611: AssertionError"}, "teardown": {"duration": 0.00029319999999999347, "outcome": "passed"}}, {"nodeid": "tests/Part_2/Part_2.py::PythonExceptions::test_about_try_clause", "lineno": 565, "outcome": "failed", "keywords": ["PythonExceptions", "test_about_try_clause", "tests/Part_2/__init__.py", "ds-sa-pyfriend", "Part_2.py"], "setup": {"duration": 0.0003710999999999576, "outcome": "passed"}, "call": {"duration": 0.00042119999999989943, "outcome": "failed", "crash": {"path": "C:\\Users\\Coke\\playground\\Section3\\ds-sa-pyfriend\\src\\Part_2.py", "lineno": 588, "message": "AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'exception handled'\n  - exception handled\n  + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694"}, "traceback": [{"path": "src\\Part_2.py", "lineno": 588, "message": "AssertionError"}], "longrepr": "self = <src.Part_2.PythonExceptions testMethod=test_about_try_clause>\n\n    def test_about_try_clause(self):\n        \"\"\"\n        try... except \ub294 \ud30c\uc774\uc36c\uc5d0\uc11c \uc608\uc678\ucc98\ub9ac\ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 \ub9e4\uc6b0 \uc911\uc694\ud55c \uae30\ub2a5 \uc911\n        \ud558\ub098\uc785\ub2c8\ub2e4.\n    \n        \uc5d0\ub7ec\ub97c \ud56d\uc0c1 \ud53c\ud558\uace0 \uc740\ubc00\ud558\ub294 \uac83\uc774 \ubc18\ub4dc\uc2dc \uc88b\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4.\n    \n        \uc5b4\ub5a4 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud588\ub294\uc9c0\uc5d0 \ub530\ub77c \ud574\uacb0\ucc45\uc774 \ub2ec\ub77c\uc9c0\uace0 \uc5b4\ub5bb\uac8c \ucf54\ub4dc\ub97c \uc9c4\ud589\ud574\uc57c\n        \ud558\ub294\uc9c0 \uc54c\ub824\uc904 \uc218 \uc788\uae30\ub3c4 \ud569\ub2c8\ub2e4.\n    \n        \uc55e\uc73c\ub85c \uc5ec\ub7ec\ubd84\ub3c4 \uc5d0\ub7ec \ud578\ub4e4\ub9c1\uc744 \ud558\uc2e4 \ub54c try... except \ub97c \uc0ac\uc6a9\ud558\ub824\uba74\n        \ucda9\ubd84\ud788 \ub2e4\ub8f0 \uc218 \uc788\ub294 \uc5f0\uc2b5\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.\n        \"\"\"\n        result=None\n    \n        try:\n            self.fail(\"Oops\")\n        except Exception as e:\n            result='exception handled'\n    \n            e2=e\n    \n>       assert \"\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\" == result\nE       AssertionError: assert '\ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694' == 'exception handled'\nE         - exception handled\nE         + \ube48\uce78\uc744 \ucc44\uc6cc\uc8fc\uc138\uc694\n\nsrc\\Part_2.py:588: AssertionError"}, "teardown": {"duration": 0.000961100000000048, "outcome": "passed", "stdout": "\n        -------------------------------------\n        Tearing down...\n        -------------------------------------\n        \n"}}]}